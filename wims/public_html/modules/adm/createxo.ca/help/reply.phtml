
<center><h3>User replies to an exercise</h3></center> <p>

There are two basic ways in which an OEF exercise accepts user replies:
multiple choices and freestyle replies. User answers will be analyzed
according to the nature of the types. It is also possible to show
!href cmd=help&special_parm=feedback feedbacks
 to the user when the answer meeds a specified condition (usually to warn a
typical error).

<p><h4>Multiple choices</h4> <p>
A multiple choice is defined by giving a list of good choices (one or
several) and another list of bad choices. <p>
Up to $choicelim simultaneous multiple choice questions can be asked for
one exercise, under the current implementation. The number of good and bad
choices within one multiple choice question is unlimited (except a limit on
the length of the string imposed by WIMS).
<p>
See 
!href cmd=help&special_parm=oef help on OEF format
 for the syntax to define a multiple choice.
<p><h4>Freestyle answers</h4> <p>
A freestyle answer is one which is typed by the user.
Up to $answerlim simultaneous freestyle answers can be asked for one
exercise, under the current implementation. <p>
The syntax is as follows:
<tt>\answer{Texte}{\reponse}{type=...}{option=...}{weight=...}</tt>
<br>
(The last 3 fields are optional.)
<p>

<a name=freestyle>
Each freestyle answer can independently take one of the following types.<ol>
 <p><li>
 <b>Auto.</b> (name: <tt>default</tt>)<br>
 The software can determine the type of the answer according to the given
 good answer. The capability of automatic determination is quite limited
 and can only distinguish numerical functions/numbers/equations/texts,
 so whenever possible, it is best to precise the type.
 
 <p><li>
 <b>Algebraic expression.</b> (name: <tt>algexp</tt>) <br>
 This is a formal algebraic expression with only limited comparison
 identification. For example, (x+1)(x-1) will not be accepted when the
 good answer is x^2-1. Nor sin(x)^2+cos(x)^2 versus 1.
 However, x-y*y and -y^2+x will be considered as
 the same. <p>
 It is useful for forcing students to do expression manipulations. <p>
 One may put several good replies, separated by commas.

 <p><li>
 !read help/anstype/atext.phtml
 
 <p><li>
 <b>Character set.</b> (name: <tt>chset</tt>) <br>
 This is a list of alpha-numerical characters, where the order is not important.
 Case non-sensitive. <p>
 This can be used to make multiple-choice replies, where the number of choices
 must be fix, and there may be several good choices that the user must find
 all.

 <p><li>
 !read help/anstype/clickfill.phtml

 <p><li>
 !read help/anstype/coord.phtml

 <p><li>
 !read help/anstype/compose.phtml

 <p><li>
 !read help/anstype/correspond.phtml

 <p><li>
 <b>Finite set.</b> (name: <tt>set</tt>) <br>
 This is a list of (literal) elements separated by commas, 
 where the order is not important.
 No evaluation is done to the elements (so that 2 and 1+1 are not the 
 same element).

 <p><li>
 <b>Finite set formal.</b> (name: <tt>fset</tt>)<br>
 As <em>finite set</em>, except that the elements are evaluated as
 <em>formal expressions</em>.

 <p><li>
 <b>Finite set approximative.</b> (name: <tt>aset</tt>)<br>
 As <em>finite set</em>, except that the elements are evaluated as
 <em>approximative expressions</em>.

 <p><li>
 <b>Formal expression.</b> (name: <tt>formal</tt>)<br>
 This is as for numerical function, to the difference that no approximation
 is allowed. <p>
 One may put several good replies, separated by commas.
 
 <p><li>
 <b>Literal expression.</b> (name: <tt>litexp</tt>)<br>
 This is a formal mathematical expression that will be compared litterally
 with the given good answer, with no algebraic simplification. For example,
 x+y will not be identified with y+x, nor will 3/2 with 6/4. But 2x and 2*x
 will be identified, and spaces will be collapsed before comparison. <p>
 It is useful for forcing students to do expression manipulations. <p>
 One may put several good replies, separated by commas.

 <p><li>
 <b>Matrix.</b> (name: <tt>matrix</tt>)<br>
 As for vector answer, each coefficient is evaluated and compared to the
 corresponding coefficient of the good answer.

 <p><li>
 <b>Number.</b> (name: <tt>numeric</tt>)<br>
 Comparison of real numbers up to the precision defined by the author.
 
 <p><li>
 <b>Number with range.</b> (name: <tt>range</tt>)<br>
 Comparison of real numbers within a range. The good reply should be
 composed of two numbers, m and n, separated by a comma, with m&lt;n. Any
 input between m and n (inclusive) will be accepted as good.
 
 <p><li>
 <b>Number with units.</b> (name: <tt>units</tt>)<br>
 Typically it is a physical quantity with units attached. The answer will be
 evaluated as such, so that for example <tt>1.5 cm</tt> and <tt>15 mm</tt>
 have the same meaning. The precision requirement is as for the numerical
 expression.
 
 <p><li>
 !read help/anstype/sigunits.phtml

 <p><li>
 <b>Numerical function.</b> (name: <tt>function</tt>)<br>
 The answer will be compared to the given one, for values of the variables
 within a range defined by the author, and up to the precision
 defined by the author.

!! <p><li>
!! !read help/anstype/reorder.phtml
!! 
 <p><li>
 !read help/anstype/text.phtml
 
 <p><li>
 <b>Vector.</b> (name: <tt>vector</tt>)<br>
 Each coefficient is evaluated and compared to the corresponding coefficient
 of the good answer. Therefore only numerical vectors can be used here.
 The answer as well as the good answer can either have or not have
 enclosing pairs of parentheses.
 
 <p><li>
 !read help/anstype/wlist.phtml
 
 <p>
!read help/anstype/multiple.phtml
</ol>

<p><h4>Testing conditions</h4> <p>
Under certain circumstances, it is desired that freestyle answers be tested
by special conditions (questions with multiple good answers, exercises 
asking for examples, answers determined by inequalities, etc). This can be
done in the following way. <p>
If the good answer to a freestyle question is an undefined variable, the
answer to this question will be fed into this variable. The latter can then
be used to implement testing conditions. The score given to the exercise is
then determined by the number of testing conditions which are met, rather
than the number of answers which meet the good answers.
<p>
Up to $condlim simultaneous conditions can be defined for one
exercise, under the current implementation. The syntax is as follows.
<p><tt>
\condition{prompt text}{testing conditions}{weight=...}
</tt>
(The last field is optional.)
<p>
Here are some examples of testing conditions. (<tt>\ans1</tt> and
<tt>\ans2</tt> are undefined variables appearing in freestyle answers, as
described above.)
<small>
!href target=wims_mhelp cmd=help&special_parm=if Complete list of relations
</small>
<p>
$table_header
$table_hdtr<th>Condition<th>meaning
$table_tr<td><tt>\ans1>=0 and \ans1<=1</tt>
    <td>Good if <tt>ans1</tt> is within the interval [0,1].
$table_tr<td><tt>\ans1=1 or \ans1=3 or \ans1=5</tt>
    <td>Good if <tt>ans1</tt> is 1, 3 or 5.
$table_tr<td><tt>(\ans1)*(\ans2)=6 and (\ans1)+(\ans2)=5</tt>
    <td>Good if <tt>ans1</tt> and <tt>ans2</tt> are the two 
    roots of the polynomial x<sup>2</sup>-5x+6.
$table_tr<td><tt>sin(\ans1)=0</tt>
    <td>Good if <tt>ans1</tt> is a multiple of $m_pi.
$table_end <p>
See
!href cmd=help&special_parm=oef help on oef format
 for the syntax for defining replies.

