!! display list of participant with usual information
!! work to do
!!ATTENTION : il faut faire un tableau different en fonction du niveau de structure de la classe d'appel (portail, superclass, etc...) reflechir Ã  ce que l'on affiche.

!read adm/title.phtml 1\
$classname\
$wims_name_part_list ($usercnt)

!reset table_center

!if $usercnt=0
    <div class="wimscenter">
    !set typen=!defof class_typename in wimshome/log/classes/$wims_class/.def
    $name_noyetparticipant
    !if $typen!=level
        &nbsp;
	!set wims_ref_class=wims_button
	!href module=adm/class/reguser&step=1 $wims_name_addstudent
	&nbsp;
    !endif
!!    20141016 : deconnecte pour l'instant, attente d'organisation.
!!    !set wims_ref_class=wims_button
!!    !href cmd=reply&job=csv $wims_name_csv
    </div>
!else
!! ------ manage ask for technical variable selection.
    !form reply
	<p>
 		$name_filter
		<textarea name="varfilter">$varfilter</textarea>
 		!set wims_ref_class=wims_button_help float_right
 		!href cmd=help&special_parm=filter $wims_name_help
  	</p>
	<div class="wimsform wimscenter">
  		<input type="submit" value="$wims_name_Show" />
  	</div>
    !formend
!! ----- displaying table of participant
    $table_header
	$table_hdtr
	    !for k in $name_studentglo,$wims_name_Login,$wims_name_email,$name_regnum,$name_external_auth,$name_comments
		<th>$k</th>
	    !next k
	</tr>
    !readproc adm/class/mkcomment name
    !let namecomment=$scriptout
    !for i=1 to $usercnt
	!set uu=!record $i of wimshome/log/classes/$wims_class/.userlist
	!distribute items $uu into bl,bl,uu
	!if $varfilter_!=$empty
	    !read adm/class/testfilter $uu\
$varfilter_
	!endif
	!if $(var_filter_test)=1 or $varfilter_=$empty
!!          !set UU=!hex $uu
          !reset user_exists,user_email,user_regnum,user_external_auth,user_comments$namecomment,user_comments
	  !readproc adm/class/userdef classes,$wims_class,$uu
          !readdef $userdef
	  $table_tr
             <td>
		!href cmd=reply&job=userprop&getuser=$uu $name_studentloc
	        !if $uu isitemof $wims_connectedlogin
		    <img src="gifs/themes/$wims_theme_icon/connected.png" width="15px" alt="connected" />
	        !endif
	     </td>
	     <td>$uu</td>
             !for k in email,regnum,external_auth
                 <td> $(user_$(k))</td>
             !next k
             <td>
                  !readproc adm/class/mkcomment val
                  $scriptout
             </td>
          </tr>
	!endif
    !next i
    </table>
!endif


!! define wims_menu_items
!set wims_menu_items=!append line csv,1,module=adm/class/userscore&job=csv\
,0,\
sendmail,1,module=adm/class/sendmail\
photoboard,1,module=adm/class/photoboard\
,0,\
Score1,1,module=adm/class/userscore\
livret,1,module=adm/class/livret\
,0,\
to $wims_menu_items
!if $typen!=level
 !set wims_menu_items=!append line addstudent,1,module=adm/class/reguser&step=1\
to $wims_menu_items
!endif
!if $deleted!=$empty
 !set wims_menu_items=!append line recover,1,cmd=reply&job=recover\
to $wims_menu_items
!endif
