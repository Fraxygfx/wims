!! +var+ +exec+ +string+
$lst_tit recursion$lst_titend$type_both
  $(lst_syntax)recursion $emph fn$emphend for $emph v$emphend=$emph v1$emphend
  to $emph v2$emphend [step $emph st $emphend], or <br/>
$ !recursion $emph fn$emphend for $emph v$emphend in 
  $emph v1,v2,v3,...$emphend</tt>
  $lst_mean Computes the outcome of a recursion using the function
  $emph fn$emphend in which the
  variable $emph v $emphend is replaced successively by values $emph v1$emphend,
  ..., $emph v2$emphend. <p>
  In the second syntax, the values are given with respect to each item in
  the list $emph v1,v2,...$emphend. <p>
  The function $emph fn$emphend should use the variable $emph last$emphend
  to indicate the value of the previous recursion step.
  And the starting value can be put into the WIMS variable
  <tt>$$recursion_start</tt>.
  </p>
