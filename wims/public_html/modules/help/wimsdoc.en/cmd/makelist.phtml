!! +var+ +exec+ +string+
$lst_tit makelist$lst_titend$type_both
  $(lst_syntax)makelist $emph templ$emphend for $emph v$emphend=$emph v1$emphend
  to $emph v2$emphend [step $emph st $emphend], or <br>
$ !makelist $emph templ$emphend for $emph v$emphend in 
  $emph v1,v2,v3,...$emphend</tt> <br>
  $lst_mean Outputs a list consisting of $emph templ$emphend with 
  variable $emph v $emphend successively substituted by values $emph v1$emphend,
  ..., $emph v2$emphend. <p>
  In the second syntax, the substitutions are done with respect to each item in
  the list $emph v1,v2,...$emphend. <p>
  The variable $emph v $emphend should appear in $emph templ $emphend 
  as a math variable (that is, with no preceeding character). <p>
  For example, the command
<pre>!makelist [x;x+1;xx] for x in a,x and y,1,(2,3)</pre>
  gives the result
  <pre>
  !makelist [x;x+1;xx] for x in a,x and y,1,(2,3)
  </pre>

