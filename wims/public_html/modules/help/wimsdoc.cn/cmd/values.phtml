!! +var+ +exec+ +string+
$lst_tit values$lst_titend$type_both
  $(lst_syntax)values $emph fns$emphend for $emph v$emphend=$emph v1$emphend
  to $emph v2$emphend [step $emph st $emphend], 或 <br>
$ !values $emph fns$emphend for $emph v$emphend in 
  $emph v1,v2,v3,...$emphend</tt>
  $lst_mean 把变量 $emph v $emphend 用 $emph v1$emphend 与
  $emph v2$emphend 之间的值逐次替换后, 输出函数 $emph fns$emphend 值的表. <p>
  在第二种情形, 用表 $emph v1,v2,...$emphend 里的值逐次替换.
  $emph fns$emphend 可以是用逗号分隔的函数表. <p>
  这个命令也可用于递归. 如果函数 $emph fns$emphend 包含名为
  $emph last$emphend 的变量, 这个变量将取上次算得的函数值.
  而初始值可以放在 WIMS 变量 <tt>$$recursion_start</tt> 中.

