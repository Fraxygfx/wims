WIMS' search engine and als
===================

WIMS' search engine works in three stages:

- the program perl ~/public_html/bases/sys/mkwgrp.pl 
  generates keywords (in format .json to be used for completion in 
  the search engine) and create the files in wgrp. Some files are created
  in keywords as keywords/algebra.fr.tmp, but not used for the moment 
  The keywords are exactly those in the variable keywords (or keywords.$lang
  if it exists) doing it with the following rules : 
   taking keywords_$lang if it exists, or keywords (whatever it is a $lang-module
   or not).

- the programm ~/public_html/bases/sys/mkdomain.pl creates the lists of domains from
  the graph in domain/domain with its translation and in json format (english)
  to be used for completion in modtool properties
 
- the program ~/public_html/bases/sys/modindclass.pl creates the lists
  of keywords coming from the example classes in ~/public_html/bases/sys/class 
  as well as the files author, description, language, level, title 
   (no ranking is done).
 
- the program "modind" reads 
  -- the INDEX files of all the modules on the site 
  -- the words in wgrp
  and produces keywords lists stored in ~wims/public_html/bases/site 
 : they contains the words (or words groups) coming from the variable keywords of the INDEX
  but also words of the title, description (deleting small words).
  ("modind" creates as well a serial list of all the modules available 
  on the site, see ~/public_html/bases/site/serial, and calculates 
  the ranking of the site's modules). The modules are classified according
  to their types (A=all (except sheet and classes, D=document, O=OEF, X=exercise,
   T= tool, R=recreation, M= data module).
  To doing that, it uses some dictionnaries as suffix.$search_lang.
  Rmk : (bpr) I deliberately delete the suffix.fr as it is incompatible with a list of
  words shown by completion (for example, loi normale was translated in 
  loi norm??, I do not remember, it is impossible to write such things
  to completion, and loi normale was not found).
  suffix.en should be also deleted. 
  -- separately it reads also the files in ~/public_html/bases/sys/sheet
  and do the same type of works
- the script ~/public_html/modules/home/search.proc (called by the
  "Search" form) reads the lists above, do the actual search in such
  lists and displays the modules found. It reads also the 
  files of ~/public_html/bases/sys/class and  ~/public_html/bases/sys/sheets

In both stages files (suffix.$lang for example, but see upper remark)
in this directory are used to process the keywords present in the modules' INDEX files.
Each "search language"
has its own series of files. For any module, in any language, the keywords

The contents of these files should be
checked by developers and translators, to improve the behaviour of the
search engine.

The files in this directory are automatically generated (on install)
by the corresponding ".src" file in the "src" subdirectory. 

(Remark : I delete the files words.fr.src and suffix.fr.src by renaming
for the moment xx_orig, so they are not used, but on a public servor,
the files suffix.fr.src must be deleted by hand to make the search engine
correctly working, will be done by the script in the stable release
if we are OK)

Syntax: the lines for most of these files are in the form

==
givenword:substitute
==

=============================================================

Files
=====

words.$search_lang : correct misprints in the search words
(used both by "mkindex" and "search.proc"). 

E.g. if the file words.en contains the line

==
analytical:analytic
==

then the word "analytical" is considered a misprint and any occurrence
of the string "analytical" is replaced in the search by the string
"analytic" (for the language "en")

Note: the file words.en is used by the module tool/wcalc.en (see
~/public_html/modules/tool/wcalc.en/dic )

=====================

suffix.$search_lang : process common suffixes in the search words
(used both by "mkindex" and "search.proc"). 

E.g. if the file suffix.en contains the line

==
ertem:meter
==

then any word ending in "metre" ("ertem" the other way round) is
substituted by the corresponding one ending in "meter" (kilometre -->
kilometer)

=====================

wgrp/wgrp.$search_lang : groups of word
(these files are automatically generated, used by "mkindex")

E.g. if the file wgrp/wgrp.en contains the line

==
affine geometry:affine geometry,
==

then the search matches for the group of words "affine geometry" as a
whole: if the the user searches for "affine geometry" the search
engine returns only the modules containing as keyword the exact string
"affine geometry" (if such line were not present the search engine
would return both the modules containing the word "affine" and the
modules containing the word "geometry").

The "wgrp" files are now generated from the modules' keywords by the
script ~/public_html/bases/sys/mkwgrp.pl : whenever a module contains
multiple words keywords, such keywords are added to the wgrp files. 

E.g. tool/algebra/smallgroup.fr/INDEX contains the keyword 

keywords=group, finite group, order, subgroup, conjugacy class, center, normal subgroup, subgroup lattice

so for each of the groups of words between two commas the
corresponding groups of words are created

finite group
conjugacy class
normal subgroup
subgroup lattice

(in the corresponding language file)

NOTE: problems when the strings contains the apostrophe "'"
(e.g. "algorithme d'euclide")

=====================

indignore.$search_lang : ignored words
(used by "mkindex")

All the words listed in the file are ignored by the search engine. 

=====================

abuse.$search_lang : swearwords to be ignored by the search engine
(used by ??)

=====================

andor.$search_lang : conjunctions ("and", "or") to be ignored by the 
search engine
The file andor.xx is mentioned in src/insmath.c (processing logic statements in math formulas)
but this is for the moment used by no modules (to be used, one must have 
insmath_logic=yes which do not exist in any public module as I know).


=====================

keywords.fr : ??
(used by ??) should be deleted

=======================================================


Some indexing examples
======================

todo


====================================

In popup.fr, I change also the way to use the keywords for analogous
reason, I do not have done it in popup.$lang for $lang != fr).

The file suffix.fr was also used by wcalc.fr , for compatibility
with popup on the external web pages, I keep it (so copy it
in the wcalc.fr modules).

Be careful : keywords have two significations here :
  - the perl script takes only the words in  the variable keywords
  (so only them are in the list of completion)
  - modind.c creates files A.$lang etc which are based on words of keywords,
  title, description. They are not all of them in the "completion list"
  but can be written and found by the search engine.

  
