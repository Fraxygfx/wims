!set titb=Utilisation de Variables dans un Document
!set keyw=
!set datm=20101204
!set prev=draw
!set next=classdoc
!set upbl=main
!set dat1=19000101
!set dat2=24000101

!if $wims_read_parm!=$empty
 !goto $wims_read_parm
!endif

!exit

:content
<p>
Vous pouvez définir des variables dans vos documents puis les appeler dans la suite (d'une même page), rendant ainsi le document plus dynamique.
<p>
Par exemple, la ligne suivante définit une variable sous le nom de
<font color="blue"><b>x1</b></font>, dont la valeur sera un entier aléatoire entre
-10 et 10 (inclusif)&nbsp;&#58;
<pre>
\def{integer x1=random(-10..10)}
</pre>
Cette valeur aléatoire peut ensuite être évoquée par le mot
<b><tt>\x1</tt></b>, dans la suite du bloc qui l'a définie.
C'est-à-dire, chaque mot <tt>\x1</tt> sera remplacé par la valeur aléatoire de la variable.
Cette substitution prend aussi effet dans les définitions
d'autres variables qui suivent celle de x1.
<p>

!set tmp0=!randint 10, 50

!set m_x1=$[rint($(tmp0))]


!set tmp0=!randint 10, 50

!set m_y1=$[rint($(tmp0))]


!set m_xy=$[rint($m_x1*$m_y1)]

Par exemple, dans cette page nous avons défini
<pre>
\def{integer x1=random(10..50)}
\def{integer y1=random(10..50)}
\def{integer xy=\x1*\y1}
</pre>
Par conséquent, le texte <tt>\x1*\y1=\xy</tt> donne
$m_x1*$m_y1=$m_xy. Vous pouvez 
!read primitives.phtml 1, reload, renouveler la page 
 pour voir les valeurs changer.
<p><center>Quelques autres exemples de variables

!read primitives.phtml 2, help, module=adm/doc&job=help&help_subject=oefparm, [Liste complète] 

<table border="2" bgcolor="bisque">
<tr><th>Définition</th><th>Effet</th></tr>
<tr><td><tt>\def{real x=random(-5..5)}</tt>
    </td><td>\x sera un nombre réel aléatoire<br>entre -5 et 5</td></tr>
<tr><td><tt>\def{real a=random(-5,-3,0.3,4)}</tt>
    </td><td>\a sera un nombre réel pris aléatoirement<br>parmis -5,-3,0.3 et 4</td></tr>
<tr><td><tt>\def{complex z=(1+2*i)^3}</tt>
    </td><td>\z sera le nombre complexe z=
!insmath (1+2*i)^3
</td></tr>
<tr><td><tt>\def{text sign=random(+,-)}</tt>
    </td><td>\sign sera un signe aléatoire&#58; + ou -</td></tr>
<tr><td><tt>\def{integer n=3*exp(\a)}</tt>
    </td><td>\n sera l'entier le plus proche de 3*e<sup>\a</sup><br>(il dépend de la valeur de \a)</td></tr>
<tr><td><tt>\def{function f=random<br>(x^2+1,sin(x),log(x))}</tt>
    </td><td>\f sera une fonction aléatoire&#58; soit 
!insmath x^2+1
,<br>soit sin(x), soit log(x)</td></tr>
<tr><td><tt>\def{text s=shuffle(6)}</tt>
    </td><td>$m_s sera une liste de 6 entiers 1,2,...,6, dans un ordre aléatoire.</td></tr>
<tr><td><tt>\def{text s=shuffle(a,b,c,d,e)}</tt>
    </td><td>$m_s sera les lettres {a,b,c,d,e} dans un ordre aléatoire.</td></tr>
<tr><td><tt>\def{real a=evalue(x^2+sin(y),x=3,y=4)}</tt>
    </td><td>Evaluation de la fonction 
!insmath x^2+sin(y)
,<br>
    pour x=3, y=4</td></tr>
<tr><td><tt>\def{real r=solve(x^3-3*x+1,x=0..1)}</tt>
    </td><td>\r sera la racine simple de 
!insmath x^3-3x+1
 entre 0 et 1</td></tr>
<tr><td><tt>\def{function h=simplify(x^5*y^3*x^2/y)}</tt>
    </td><td>Expression simplifiée &#58; 
!insmath x^7*y^2
</td></tr>
<tr><td><tt>\def{function g=diff(sin(x)+cos(y),x)}</tt>
    </td><td>\g sera la dérivée de sin(x)+cos(y) par rapport à x</td></tr>
<tr><td><tt>\def{function F=int(x^2+3*x+1,x)}</tt>
    </td><td>\F sera une primitive de 
!insmath x^2+3*x+1
,<br>
     le terme constant n'étant pas garanti d'être toujours le même</td>

!read primitives.phtml 3, comment, <tr><td><tt>\\def{function F=int(t^2+3*t+1,t=1..x)}</tt>	    <td>\\F sera la primitive de \(x^2+3*x+1) telle que F(1)=0 
</td></tr>
<tr><td><tt>\def{real a=int(t^2+3*t+1,t=0..1)}</tt>
    </td><td>$m_a sera l'intégrale numérique de 
!insmath x^2+3*x+1
, de 0 à 1</td></tr>
<tr><td><tt>\def{text f=htmlmath(2*x^2+3*x)}</tt>
    </td><td>\f sera rendu en html comme&#58; 
!insmath 2x^2+3x
</td></tr>
<tr><td><tt>\def{text f=texmath(2*x^2+3*x)}</tt>
    </td><td>\f sera le source TeX de l'expression.</td></tr>
<tr><td><tt>\def{matrix m=1,2,3<br>4,5,6<br>7,8,9}</tt>
    </td><td>\m sera la matrice de 3 lignes et 3 colonnes.</td></tr>
</table></center><p>
<p>
Paramètres conditionnels&nbsp; vous pouvez écrire<p>
<tt>$m_text{ttt=_condition?_def1}</tt> ou <br>
<tt>$m_text{ttt=_condition?_def1&#58;_def2}</tt>
<p>
Dans ce cas, <tt>ttt</tt> aura la valeur <tt>_def1</tt> si
<tt>_condition</tt> s'avère vraie, ou <tt>_def2</tt> sinon (dans la seconde
syntaxe).

!read primitives.phtml 4, help, module=adm/doc&cmd=new&job=help&help_subject=if, Liste de conditions 
.
<p>
Notons enfin que les blocs insérés via 
!read primitives.phtml 5, link, fold, <tt>\fold</tt> 
 ou 

!read primitives.phtml 6, link, embed, <tt>\embed</tt> 
 héritent les définitions de variables avant l'insertion.
