<!-- Automatically generated by bin/oefdoc.pl -->
var oefparm0name= '可用的参数类型';
 var oefparm0= [ '\\real{  =  }', '\\complex{  =  }', '\\text{  =  }', '\\integer{  =  }', '\\rational{  =  }', '\\function{  =  }', '\\matrix{  =  }' ];
function oefparm0fun(instruction){
    switch(instruction)
	{
	case '\\real{  =  }' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{x=random(-5..5)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\x 是介于 -5 与 5 之间的随意实数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case '\\complex{  =  }' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\complex{z=(1+2*i)^3}</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\z 是复数 z=(1+2*i)^3</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case '\\text{  =  }' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\text{a=1 2  3}</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\a is the text without any transformation</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case '\\integer{  =  }' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\integer{n=3*exp(\\a)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\n 是最接近 3*e<sup>\\a</sup> 的整数 (它依赖于 \\a 的值)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case '\\rational{  =  }' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\rational{x=2*5/6}</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\x 是(精确的)有理数 5/3</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case '\\function{  =  }' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\function{f=2*x^2}</code></div>'+
'<div class="explication"><div class="title">Explication</div>the function 2 x^2</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case '\\matrix{  =  }' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\matrix{m=1,2,3<br>4,5,6<br>7,8,9}</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\m 是一个 3 行 3 列的矩阵.</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	
	}
}