<!-- Automatically generated by bin/oefdoc.pl -->
var oefparm2name= '数据与表的操作';
 var oefparm2= [ 'items( )', 'item( )', 'item( .. , )', 'item([ , ], )', 'position( )', 'rows( )', 'row( , )', 'row( .. , )', 'row([ , ], )', 'row(   , )', 'randomitem( )', 'randomrow( )', 'column( , )', 'column( .. , )', 'column([ , ], )', 'asis( )', 'htmlmath( )', 'texmath( )' ];
function oefparm2fun(instruction){
    switch(instruction)
	{
	case 'items( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>items(a,b,c,d,e,f)</code></div>'+
'<div class="explication"><div class="title">Explication</div>表 {a,b,c,d,e,f} 的项数(这里是 6)    </div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'item( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>item(3,a,b,c,d,e,f)</code></div>'+
'<div class="explication"><div class="title">Explication</div>表 {a,b,c,d,e,f} 的第 3 项(这里是 c) ; <tt>item(3,\\ll)</tt> 表 \\ll 的第 3 项(同 <tt>\\ll[3]</tt>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'item( .. , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>item(2..5,a,b,c,d,e,f)</code></div>'+
'<div class="explication"><div class="title">Explication</div>表 {a,b,c,d,e,f} 的第 2 至 5 项(这里是 b,c,d,e)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'item([ , ], )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>item([2,4],\\ll)</code></div>'+
'<div class="explication"><div class="title">Explication</div>表 \\ll 的第 2 及第 4 项(同 <tt>\\ll[2,4]</tt>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'position( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>position(make,do,go,make,take)</code></div>'+
'<div class="explication"><div class="title">Explication</div>项 `make\' 在表 {do,go,make,take} 里的位置(这里是 3)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'rows( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>rows(\\m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>矩阵 \\m 的行数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'row( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row(2,\\m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>矩阵 \\m 的第 2 行(同 <tt>\\m[2;]</tt>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'row( .. , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row(2..5,\\m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>矩阵 \\m 的第 2 至 5 行构成的子矩阵(同 <tt>\\m[2..5;]</tt>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'row([ , ], )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row([1,3],1,2,3<br>3,4,5<br>5,6,7)</code></div>'+
'<div class="explication"><div class="title">Explication</div>由 3&times;3 矩阵的第 1, 3 行构成的子矩阵</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'row(   , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>row(column 1 > 1 and column 2 = good,\\mat)</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\mat 的子矩阵, 其中每行的第 1 列 > 1, 第 2 列是词 `good\'</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'randomitem( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>randomitem(\\list)</code></div>'+
'<div class="explication"><div class="title">Explication</div>(用逗号分隔的)表 \\list 的随机项</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'randomrow( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>randomrow(\\mat)</code></div>'+
'<div class="explication"><div class="title">Explication</div>矩阵 \\mat 的随机行</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'column( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>column(2,\\m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>矩阵 \\m 的第 2 列元素, 作为用逗号分隔的表(同 <tt>\\m[;2]</tt>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'column( .. , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>column(2..5,\\m)</code></div>'+
'<div class="explication"><div class="title">Explication</div>\\m 的第 2 至 5 列构成的子矩阵(同 <tt>\\m[;2..5]</tt>)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'column([ , ], )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>column([1,3],1,2,3<br>3,4,5<br>5,6,7)</code></div>'+
'<div class="explication"><div class="title">Explication</div>由 3&times;3 矩阵的 1, 3 列构成的子矩阵</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'asis( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>asis(How do you do? item(1,2,3))</code></div>'+
'<div class="explication"><div class="title">Explication</div>按原样构成字符串, 不作任何替换或解释</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'htmlmath( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>htmlmath(2*x^2+3*x)</code></div>'+
'<div class="explication"><div class="title">Explication</div>html 格式下此公式的最佳形式: 2x<sup>2</sup>+3x</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'texmath( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>texmath(2*x^2+3*x)</code></div>'+
'<div class="explication"><div class="title">Explication</div>表达式的TeX源码</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	
	}
}