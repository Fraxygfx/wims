<!-- Automatically generated by bin/oefdoc.pl -->
var oefparm3name= '数学函数';
 var oefparm3= [ 'evalue( )', 'solve( )', 'simplify( )', 'diff( )', 'int( , )', 'int( , = .. )', 'det( )', 'abs( )', 'sqrt( )', 'binomial( , )', 'ceil( )', 'floor( )', 'rint( )', 'e', 'erf( )', 'erfc( )', 'Euler', 'exp( )', 'factorial( )', 'Inf', 'gcd( , )', 'lcm( , )', 'max( , )', 'min( , )', 'lg( )', 'lgamma( )', 'ln( )', 'log2( )', 'pow( , )', 'sgn( )', 'PI', 'sin', 'acos', 'sh', 'Argch' ];
function oefparm3fun(instruction){
    switch(instruction)
	{
	case 'evalue( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>evalue(x^2+sin(y),x=3,y=4)</code></div>'+
'<div class="explication"><div class="title">Explication</div>函数 x^2+sin(y)在 x=3, y=4 处赋值</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'solve( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>solve(x^3-3*x+1,x=0..1)</code></div>'+
'<div class="explication"><div class="title">Explication</div>x^3-3x+1 在 0 与 1 间的单根</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'simplify( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>simplify(x^5*y^3/x^2/y)</code></div>'+
'<div class="explication"><div class="title">Explication</div>化简: x<sup>3</sup>y<sup>2</sup></div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'diff( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>diff(sin(x)+cos(y),x)</code></div>'+
'<div class="explication"><div class="title">Explication</div>sin(x)+cos(y) 关于 x 的导数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'int( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>int(x^2+3*x+1,x)</code></div>'+
'<div class="explication"><div class="title">Explication</div>x^2+3*x+1 的原函数, 常数项不定</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'int( , = .. )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>int(t^2+3*t+1,t=0..1)</code></div>'+
'<div class="explication"><div class="title">Explication</div>x^2+3*x+1 从 0 到 1 的数值积分</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'det( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>det(\\mat)</code></div>'+
'<div class="explication"><div class="title">Explication</div>矩阵 \\mat 的行列式</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'abs( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=abs(-32)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>absolute value  (equivalent : fabs( ))</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'sqrt( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=sqrt(32)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>平方根</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'binomial( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\integer{a=binomial(9,3)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>二项式系数 (用于小于 10^7 的数, 否则利用 pari 的函数 \\text{a=pari(binomial(50,10))}</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'ceil( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=ceil(3.4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>大于等于此数的最小整数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'floor( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=floor(3.4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>小于等于此数的最大整数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'rint( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=rint(3.4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>最接近的整数 (equivalent : round( ))</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'e' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=e^2}</code></div>'+
'<div class="explication"><div class="title">Explication</div>数学常数 $m_e (equivalent : E)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'erf( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=erf(3.4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>Function erf</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'erfc( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=erfc(3.4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>Function erfc</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'Euler' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=Euler}</code></div>'+
'<div class="explication"><div class="title">Explication</div>Euler constante (equivalent EULER  euler)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'exp( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=exp(4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>exponential</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'factorial( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\integer{a=factorial(4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>阶乘</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'Inf' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=Inf + 3}</code></div>'+
'<div class="explication"><div class="title">Explication</div>无穷大</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'gcd( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\integer{a=gcd(4,6)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>两个整数的最大公约数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'lcm( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\integer{a=lcm(4,6)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>两个整数的最小公倍数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'max( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=max(4,6)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>两数的大者</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'min( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=gcd(4,6)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>两数的小者</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'lg( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=log10(10^4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>常用对数 (equivalent : log10)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'lgamma( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=lgamma(e^(24))}</code></div>'+
'<div class="explication"><div class="title">Explication</div>Gamma 函数的对数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'ln( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=ln(e^4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>自然对数 (equivalent : log)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'log2( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=log2(2^4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>以 2 为底的对数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'pow( , )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=pow(3,0.6)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>取乘幂 3^0.6</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'sgn( )' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\integer{a=sign(-4)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>取符号 (equivalent : sign)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'PI' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>\\real{a=sin(Pi)}</code></div>'+
'<div class="explication"><div class="title">Explication</div>圆周率 $m_pi (equivalent : Pi, pi)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'sin' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>sin(3)</code></div>'+
'<div class="explication"><div class="title">Explication</div>三角函数 (other functions : tg tan sec (1/sin) cot cotan cotan ctg csc (1/cos))</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'acos' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>acos(0.5)</code></div>'+
'<div class="explication"><div class="title">Explication</div>反三角函数</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'sh' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>sh(4)</code></div>'+
'<div class="explication"><div class="title">Explication</div>双曲函数 (other functions : sh sinh tanh tanh th ch cosh coth cotanh)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	case 'Argch' :
chaine_aide='<div class="syntax"><div class="title">Syntaxe</div><code>Argch(4)</code></div>'+
'<div class="explication"><div class="title">Explication</div>反双曲函数 (other functions : Argch acosh argch Argsh asinh argsh Argth atanh argth)</div>'+
'' ; return chaine_aide;
	   break;
	////******************** 

	
	}
}