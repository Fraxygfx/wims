All comparisons are made on strings: <tt class="wims_code_words">string1 rel string2</tt>.
Comparisons can be joined using <tt class="wims_code_words">and</tt> and 
<tt class="wims_code_words">or</tt>. Parentheses may
be used to build complex comparison logics.

:Valid relations
:Relation,Condition
:==
string1  ==  string2  string1  ==  string2
true if <tt class="wims_code_words">string1</tt> and <tt class="wims_code_words">string2</tt> are identical.
:!=
string1  !=  string2  string1  &lt;&gt;  string2
true if <tt class="wims_code_words">string1</tt> and <tt class="wims_code_words">string2</tt> are NOT identical.
:<
string1  <  string2
true if (the numerical evaluation of) <tt class="wims_code_words">string1</tt> is < <tt class="wims_code_words">string2</tt>.
:<=
string1  <=  string2
true if (the numerical evaluation of) <tt class="wims_code_words">string1</tt> is $m_le <tt class="wims_code_words">string2</tt>.
:>
string1  >  string2
true if (the numerical evaluation of) <tt class="wims_code_words">string1</tt> is > <tt class="wims_code_words">string2</tt>.
:>=
string1  >=  string2
true if (the numerical evaluation of) <tt class="wims_code_words">string1</tt> is $m_ge <tt class="wims_code_words">string2</tt>.
:isin
string1  isin  string2
true if <tt class="wims_code_words">string1</tt> is a substring of <tt class="wims_code_words">string2</tt>.
:notin
string1  notin  string2
true if <tt class="wims_code_words">string1</tt> is NOT a substring of <tt class="wims_code_words">string2</tt>.
:iswordof
string1  iswordof  string2
true if <tt class="wims_code_words">string1</tt> is a word of <tt class="wims_code_words">string2</tt>.
:notwordof
string1  notwordof  string2
true if <tt class="wims_code_words">string1</tt> is NOT a word of <tt class="wims_code_words">string2</tt>.
:isvarof
string1  isvarof  string2
true if <tt class="wims_code_words">string1</tt> is a (mathematical) variable of the expression  <tt class="wims_code_words">string2</tt>.
:notvarof
string1  notvarof  string2
true if <tt class="wims_code_words">string1</tt> is NOT a (mathematical) variable of the expression <tt class="wims_code_words">string2</tt>.
:isvariableof
string1  isvariableof  string2
true if <tt class="wims_code_words">string1</tt> is a (mathematical) variable of the expression <tt class="wims_code_words">string2</tt>.
:notvariableof
string1  notvariableof  string2
true if <tt class="wims_code_words">string1</tt> is NOT a (mathematical) variable of the expression <tt class="wims_code_words">string2</tt>.
:isitemof
string1  isitemof  string2
true if <tt class="wims_code_words">string1</tt> is an item of the list <tt class="wims_code_words">string2</tt>.
:notitemof
string1  notitemof  string2
true if <tt class="wims_code_words">string1</tt> is NOT an item of the list <tt class="wims_code_words">string2</tt>.
:islineof
string1  islineof  string2
true if <tt class="wims_code_words">string1</tt> is a line of the list <tt class="wims_code_words">string2</tt>.
:notlineof
string1  notlineof  string2
true if <tt class="wims_code_words">string1</tt> is NOT a line of the list <tt class="wims_code_words">string2</tt>.
:issamecase
string1  issamecase  string2
true if <tt class="wims_code_words">string1</tt> and <tt class="wims_code_words">string2</tt> are the same text by a comparison insensitive to multiple spaces but case-sensitive.
:notsamecase
string1  notsamecase  string2
true if <tt class="wims_code_words">string1</tt> and <tt class="wims_code_words">string2</tt> are NOT the same text by a comparison nsensitive to multiple spaces but case-sensitive.
:issametext
string1  issametext  string2
true if <tt class="wims_code_words">string1</tt> and <tt class="wims_code_words">string2</tt> are the same text by a comparison insensitive to cases, multiple spaces and accented letters.
:notsametext
string1  notsametext  string2
true if <tt class="wims_code_words">string1</tt> and <tt class="wims_code_words">string2</tt> are NOT the same text by a comparison insensitive to cases, multiple spaces and accented letters.

