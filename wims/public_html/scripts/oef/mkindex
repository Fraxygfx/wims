#! /bin/sh

thisdir=`pwd`
lastdir=$thisdir
if [ -z "$wims_home" ]; then wims_home=$w_wims_home; fi

while [ -z "$wims_home" ] && [ "$lastdir" != "/" ]
do
 wims_home=`cat $lastdir/.wimshome 2>/dev/null`
 lastdir=`dirname $lastdir`
done
if [ -z "$wims_home" ]; then
 echo WIMS home directory not found.
 exit;
fi

test=
if [ ! -z "$w_wims_class" ]; then
 test=`echo $thisdir | grep '/classes/..$'`
fi
if [ ! -z "$test" ] && [ -d $wims_home/log/classes/$w_wims_class ]; then
 class_header=$wims_home/log/classes/$w_wims_class
 ntest=`awk -F'=' '$1=="sharing_exo" {print $2}' $class_header/neighbors 2>/dev/null`
 if [ ! -z "$ntest" ] && [ -d "$wims_home/log/classes/$ntest/src" ]; then
  class_header=$wims_home/log/classes/$ntest
 fi
 def=$class_header/def
 src=$class_header/src
 exindex=$class_header/Exindex
 extitles=$class_header/Extitles
 dfindex=
 tmp1=$class_header/tmp1
 tmp2=$class_header/tmp2
 mkdir -p $def
else
 class_header=
 def=def
 src=src
 exindex=Exindex
 extitles=Extitles
 dfindex=Dataindex
 imindex=Imindex
 tmp1=tmp1
 tmp2=tmp2
fi

if [ ! -d $def ]; then 
 echo Directory $def not found.
 exit;
fi
if [ ! -d $src ]; then
 echo Directory $src not found.
 exit;
fi

deff=`cd $def; ls *.def 2>/dev/null`
for i in $deff
do
 dd=`echo $i | sed 's!\.def!.oef!g'`
 if [ ! -f $src/$dd ]; then 
  echo Removing $def/$i.
  rm -f $def/$i >/dev/null;
 fi
done

sext=oef
cd $src
if [ -d cpp ]; then
 cd cpp
 incf=`ls *.inc 2>/dev/null`
 for i in $incf
 do
  list=`egrep -l '#[[:blank:]]*include[[:blank:]]+"'$i'"' *.cpp 2>/dev/null`
  for j in $list
  do
   if [ $i -nt $j ]; then touch $j; fi
  done
 done
 pref=`ls *.cpp 2>/dev/null`
 for i in $pref
 do
  list=`tr '\r' '\n' <$i | grep . | head -1 | grep target \
	| tr ',:;./?*#~$\\ ' '                  ' \
	| awk -F'=' '{print $2}'`
  test=`grep -E '^[[:blank:]]*#[[:blank:]]*include' $i \
	| grep -E -v '^[[:blank:]]*#[[:blank:]]*include[[:blank:]]*"[[:alnum:]_]+.inc"'`
  if [ ! -z "$test" ]; then
   echo $i: include violation.
   list=
  fi
  tr '\r' '\n' <$i | sed "s/'/\&#39;/g" | grep . | awk 'BEGIN {l=0}; {l++}; l>1 {print}' >cpp.tmp
  for j in $list
  do
   if [ ! -f ../$j.$sext ] || [ $i -nt ../$j.$sext ]; then
    echo "Preprocessing: $i -> ../$j.$sext"
    cat <<@ >../$j.$sext
%% This file is generated by preprocessor!
%% Do not edit it by hand.
%% Edit the source file cpp/$i.

@
    cpp -P -C -nostdinc -DTARGET_$j -A"TARGET($j)" cpp.tmp | \
	sed "s/&#39;/'/g" >>../$j.$sext
   fi
  done
  rm -f cpp.tmp
 done
 cd ..
fi

srcf=`ls *.oef 2>/dev/null`
cd $thisdir
oef2wims_mdef="oefenv"
export oef2wims_mdef
for i in $srcf
do
 dd=`echo $i | sed 's!\.oef!.def!g'`
 if [ ! -f $def/$dd ] || [ $src/$i -nt $def/$dd ]; then 
  # echo $dd
  rm -f $def/$dd 2>/dev/null
  $wims_home/bin/oef2wims $src/$i $def/$dd
 fi
done

cd $def
list=`ls *.def 2>/dev/null | sed 's/\.def//g'`
cd $thisdir

#if [ -z "$list" ]; then exit; fi
titlist=
rm -f $extitles.tmp
for i in $list
do
 tit=`awk -F= 'NF>=2 {print $2; exit}' $def/$i.def | tr ',\11' '; '`
 echo "$i:$tit" >>$extitles.tmp
 titlist="$titlist$tit
"
done
$wims_home/bin/dicsort $extitles.tmp
if [ -s $extitles.tmp.sorted ]; then
 cat $extitles.tmp.sorted >$extitles
 rm -f $extitles.tmp*
else
 rm -f $extitles.tmp.sorted
 echo >$extitles
fi

echo "$titlist" >$tmp1
echo "$list" >$tmp2
llist=`paste $tmp1 $tmp2 | sort -t '	' -f -k 1,1`
list=`echo "$llist" | awk -F'\11' 'length()>2 {print $2}' | tr '\n' ','`
titlist=`echo "$llist" | awk -F'\11' 'length()>2 {print $1}' | tr '\n' ','`

cat >$exindex <<@
!set exolist  =!char 1 to -2 of $list
!set titlelist=!char 1 to -2 of $titlist
!set exototal =!itemcnt \$exolist

@

rm -f $tmp1 $tmp2

[ -n "$class_header" ] && exit

# Datafiles

if [ -d src/data ]; then
 datafiles=`cd src/data; ls *.data | sed 's/\.data$//'`
 rm -f $dfindex.tmp
 for df in $datafiles; do
  tit=`awk 'NF>0 {if($1 ~ /^[^.:]/) print; exit}' src/data/$df.data`
  [ -z "$tit" ] && tit=$df
  echo "$df,$tit" >>$dfindex.tmp
 done
 sort -f -t, -k2 <$dfindex.tmp >$dfindex
 rm -f $dfindex.tmp
fi

#### index of files in images/ "name:directory"
cd $thisdir
rm -f $imindex
if [ -d images ]; then
  images=`cd images ; find * -type f 2>/dev/null`
  echo "<!-- This file is automatically generated. Do not edit! -->" >$imindex
  for i in $images ; do d=`dirname $i` ; file=`basename $i` ;
    echo "$file:$d" >> $imindex ; 
  done;
 #if [ ! -s "$imindex" ]; then rm $imindex ; fi ;
fi

# Gather content for robots.

outputfile=content.html

tit=
echo "<!-- This file is automatically generated. Do not edit! -->" >$outputfile
for f in `ls def/*.def 2>/dev/null`; do
 tit=`head -1 $f | cut -d= -f2`
 [ -z "$tit" ] && continue
 content=`awk 'BEGIN {a=0};
	NF == 0 {next};
	/!exit/ {a=0};
	/^!/ {next};
	a > 0 {print};
	/^:question/ {a=1};
	' $f | sed 's/\$()//g'`
 echo "<hr>
<h3>$tit</h3>
$content
" >>$outputfile
tit=
done

