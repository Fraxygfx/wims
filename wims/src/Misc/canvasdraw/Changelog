4/10/2013

Preliminary version. All javascript code is generated by 'C-program'
It will be used and tested to replace "flydraw" , "GeoGebra" and "flyapplet" in Schaersvoorde modules.
(on Leiden mirror and intranet servers only)

Tested on : 
Microsoft IE10
Gecko browsers (Firefox > 17)
Opera (>9)

Unadressed issues at this point : 
-- OEF interface
-- Some bitmap operations (like copyresize etc)
-- Isolate static javascript code  components/functions from C-"programs"
   (first need to solve  re-draw issues; managing multiple canvasses in drag/click library)
   
For implemented commands: see canvasdraw.html
For demo: see demo-directory.
For live testing: use "directexec" module on Leiden mirror.
or search keywords 'html5' 'canvas' om leiden mirror 




- 4/10  added missing "userdraw line,color" "userdraw lines,color"
- 5/10  added missing "userdraw rect,color" "userdraw roundrect,color" "userdraw triangle,color"
- 6/10  corrected syntax "fill" == "floodfill" = pixel filling to a border 
- 7/10  added arc to shape_library
- 8/10  added specific removal of a 'click_filled' area. 
	size of 'measuring rectangle' may be tuned with "clickfillmarge" 
	default distance is 20 pix from original 'fill click'
- 9/10  added parallel to shape_library
- 10/10 added missing "userdraw polygone,color"
- 12/10 added support for multi-canvasses in a single html-page
	by using unique names for all potential conflicting functions 
	(experimental work in progress)
	reading of useractions in canvas is only possible for a single instance (for now)
- 13/10 corrected hexcolor input
- 15/10 circle x,y,radius(px),color will scale/resize on zooming (like all other draggable 'massive' objects)
- 18/10 corrected tooltip to work / integrate in 'real' wims modules 
	multiple instances of tooltip are allowed (as ofcourse is true for multiple canvas)
- 19/10 ellipse x,y,rx,ry,color is draggable/clickable and will scale/resize on zooming (like all other draggable 'massive' objects)
	added "use_rotate" argument to shape library
- 20/10 added testresults flydraw versus canvasdraw.
	tried to improve 'axisnumbering' in command 'grid' ( avoiding number overlap )
- 21/10 added commands:
	xaxis num1:string1:num2:string2:num3:string3:num4:string4:....num_n:string-n
	yaxis num1:string1:num2:string2:num3:string3:num4:string4:....num_n:string-n
	to automate filling axis with text insteadof default numbering xmin...xmax
	freestyle x/y-axistext move with panning (e.g stay in visual image)
	update 'drag curve fill mathml-input' example (selective removal of filled area)
- 22/10 grid: x/y major tics and x/y minor tics now different
	add command "fontcolor color" (previously fontcolor=strokecolor) now x/y axis-texts color may be different from axis / xy-tics color

- 24/10 add command "piechart xc,yc,radius,'data+colorlist'"
- 25/10 add command "legend string1:string2:...:string_n" to add an automatically sized legend to a graph 
	add command "barchart x1:y1:color1:x2:y2:color2...x_n:y_n:color_n" to automate generation of barchart
	to be used together with commands 'grid'. May be combined with freestyle x-axis / y0-axis text (commands 'xaxis' 'yaxis')
- 26/10 add command "linegraph x1:y1:x2:y2...x_n:y_n" : may be further controlled by commands 'strokecolor','linewidth','dashed','dashtype'
	to be used together with commands 'grid'. May be combined with freestyle x-axis / y0-axis text (commands 'xaxis' 'yaxis')
	Many different linegraphs may be used in a single plot.
	add commands "userdraw rects,color" "userdraw roundrects,color" for drawing multiple rectangles 
	(for example to be used for a barchart created by students)
- 27/10 add command "userdraw text,color" work in progress...just a single char, for now (no answer_type,yet)
	need to find a way to bypass browser differences...using 'String.fromCharCode(evt.keyCode);' is not really a safe method ?
	Would be nice to have some feedback (...)
- 28/10 preparing for adding all 'text' commands to drag / click library 
- 29/10 add horizontal text to drag / onclick
	vertical or rotated text can not be set drag / onclick, 
	because the mouse coordinates do not follow the transformation matrix if in the proximity of a text-object.
	(it is ofcource possible, but at a very very high price)
- 30/10 Finished command 'userdraw text,color'
	Any string of multiple strings may be placed anywhere on the canvas.
	While typing the background of every typed char will be lightblue...
	"backspace / delete / esc" will remove typed text.
	You will need to hit "enter" to add the text to the array "userdraw_txt()" : lightblue background will disappear
	Placing the cursor somewhere on a typed text and hitting "delete/backspace/esc" , 
	a confirm will popup asking to delete the selected text.This text will be removed from the "userdraw_txt()" answer array.
- 01/11 Added 'userdraw text,color' to reply types
- 03/11	Added check on canvas-support in function 'create_canvas()'; 
	try(document.createElement('canvas');)catch(e){alert("no support");return;} 
	E.g all non supported browsers will be excluded...no intention to offer 'canvas glue' library for IE < 9
	Just use a fairly recent Firefox / Opera / Chrome
- 08/11 Added commands 
	"copyresized x1,y2,x2,y2,dx1,dy1,dx2,dy2,filename_URL"	and "copy x,y,x1,y1,x2,y2,filename_URL" 
	Todo: check compatibility...I'm not sure it works the same as in 'flydraw'
- 11/11 If xrange / yrange is not given : 
	xmin = 0 xmax = xsize
	ymin = 0 ymax = ysize
	(was x/y-range -10,10)
	Preparing for command clock (work in progress)
- 12/11 Multiple clocks may be set interactive ; read_canvas() will read all active clocks in H:M:S 
	Add argument 'hourglass type' to controle appearance of analogue clock
	Add basic interactivness
	(work in progress)
- 13/11 Added interactive=2 (multiple choice  / onclick) to select a single clock
	clock x,y,r(px),H,M,S,type hourglass,interactive,H_color,M_color,S_color,background_color,foreground_color
- 14/11 implemented own versions of "tolower()" and "toupper()"...
	I can not use the normal implementations found in 'ctypes.h' for this purpose, due to a bug in FreeBSD's C-library
	(only when using canvasdraw in a 'chroot' environment , giving : Undefined symbol "_ThreadRuneLocale)
	Temporarily removed check on 'valid wims-session' : it is not working for a 'chroot' environment (TODO correct this !!) 
- 15/11 changed basic syntax of command clock : all colours are now optional
	clock x,y,r(px),H,M,S,type hourglass,interactive [ ,H_color,M_color,S_color,background_color,foreground_color ]  
	default colours: clock 0,0,60,4,35,45,1,2,[space]
	custom  colours: clock 0,0,60,4,35,45,1,2,,,,yellow,red
	custom  colours: clock 0,0,60,4,35,45,1,2,white,white,white,black,yellow 
- 16/11 setting & reading clock (preliminiary: for now just html-buttons for adjusting H,M,S...should be active fields in canvas...) 
- 27/11 improved plotting of asymptotic curves
	correction of zoom_buttons (wrong panning in wrong direction...)
- 29/11 copy & copyresized of external images : preparing for drag&drop (outside the drag&drop shape library)
- 28/12 in case of command 'mathml' , look for 'mathml0' to trigger javascript:read_mathml() if no other ineractiveness was previously defined
	(was using keyword 'input' but changed wims_mathml to use a styled textarea as input...)
2014
- 22/1  Corrected commands with "pi"... javascript did not calculate the x-value...
	xaxis x_value:x_text:x_value:x_text:x_value:x_text....
	yaxis y_value:y_text:y_value:y_text:y_value:y_text....
	example (unicode allowed; no html)
	xaxis -4*pi:-4\u03c0:-3*pi:-3\u03c0:-2*pi:-2\u03c0:-1*pi:-\u03c0:pi/2:\u03c0/2:pi:\u03c0
- 23/1	Added a 'x' to pan/zoom-buttons (command "zoom color")
	When 'x' is pressed the page will reload (location.reload();) so the panned/zoomed image or drawing will be reset to it's original state.
	(On multiple panning/zooming the mouse coordinate display will get 'sluggish' and not very quick in response)
- 29/1  - Corrected js-fontfamily kludge...when something like "fontfamily italic 14px Ariel"
	was set, the argument fontsize of command "mouse color,fontsize" was ignored...due to the strict syntax in html/js
	fontfamily [type] [size]px [family] 
	- Now "mouse red,24" will default to font '24px Ariel'
	Command "intooltip tooltip_text" will accept html-text, images and now also Mathml as tooltip_text
	- read_canvas() : Added 'replyformat 21' : verbatim coordinate output (just for use in my existing checkfile)
	will output words (x1:y1) (x2:y2) (x3:y3) ... (x_n:y_n)
- 31/1  - read_canvas() : Added 'replyformat 22' : single array output (just for use in my existing checkfile)
	will output reply[0]=x1 reply[1]=y1 reply[2]=x2 reply[3]=y2 ... reply[n-1]=x_n reply[n]=y_n
	
	- corrected tooltip when using images as 'linktext'
	- added commands 'xlabel some_string' ylabel some_string' 
	- commands 'xlabel' 'ylabel' only depend on command 'grid' (eg without 'axis' and/or 'axisnumbering')
	- command 'legend string1:string2:string3:..:string_n' may now be used with any 'grid' (e.g. not only for barchart/linegraph/piechart)
-1/2	- add command 'legendcolors color1:color2:color3:...:color_n'
          barchart & piechart will use -ofcourse- the same colours for legend
          for all other legends, we can specify. 
          If legendcolors was not set , the default stroke_color will be used in a 'legend'
          
-3/2	- solved(?) some strange fill issues (pixel manipulation) added demo 
-3/2	- added forgotten 'readonly' attribute to js-function 'draw_inputs()'
-5/2	- if inputfield has attribute 'readonly', do not read the value when using javascript:read_canvas();
	  eg only active inputfields will be read with read_canvas();
	- add command 'dsegment' as alias for dashed segment
-6/2	- added default fontfamily settings to 'legend', 'xlabel' and 'ylabel' ; size may be set by command 'fontsize'
	  the rest of the gridfonts (numbering or x/yaxis text) is determined by the 'fontfamily'
	  (something like:fontfamily bold italic 24px Courier)
	- added forgotten filling of an arc ;command 'filledarc'
-7/2	- corrected x-y mixup in case xrange/yrange was forgotten (eg xrange = 0 px ,sizex px)
	- command "bgimage url" will scale to fit background image
-8/2	- corrected syntax in bgimage:
	  canvas_div.style.background-size --> canvas_div.style.backgroundSize
	  
-12/2	- removed reading of mathml-inputfield in canvas (only "replyformat 16" will read it)
	  Using generic js-functions in wims-pages to read all mathml-inputs (including the ones in a canvas image !)
-19/2	- added command 'animate type' as primitive animation ; only 'point' on curve is implemented
-27/2	- solved nasty issue with "drawing on top of external image"  with copy / copyresized
	  - there is no way to paint on top of an external image loaded into a canvas...
	  - an external image copied into a canvas / resized etc... can not be set as CSS backgroundImage of a div... (at least in firefox)
	  - an external image copied into a canvas / resized etc... can be set as background of the document.body...
	  We just use the URL of the image...and add some CSS to it (no-repreat / Size / Position) and det the URL to the backgroundImage of the main div
	  
-28/2	- tried to correct copy/ropyresized ; using image as background image of div (e.g. no canvas !)
	  The commands are still not equal to Flydraw: I'm giving up on this !!
	  It works if not too much cropping is required.
-3/3	- synchronized commands "arrow" and "arrow2" with flydraw syntax; e.g. arrow x1,y1,x2,y2,head_in_px,color
-14/3	- forgotten 'break;'
-21/3	- corrected spurious segfault on Gentoo 64 bits (leiden) and OpenSuSE-32 : 
	    char *temp = str_replace( getstring(infile,1),"blah","beh"); 
	    Changed into:
	    char *temp = getstring(infile,1); 
	    if( strstr(temp,"blah") != 0 ){ temp = str_replace( temp ,"blah","beh");} 
	    On 32/64 bits FreeBSD ; 32/64 bits OpenBSD no problems
	    segfault occured in case  "blah" was not present in "temp"  (and no replacement was made) and string length wos big
	    Probably heve to look into str_replace() !

-23/3	- simplified buffer usage : now js-include file in wims-getfile-directoy is standard.
	  The rest is printed in a fairly small buffer and printed to stdout at the end of parsing the fly-script.
	  No option anymore to gzip the include.
	  canvasdraw now only works in correct wims_environment : e.g. ./canvadraw < fly.txt  will not work anymore
-25/3	- userdraw functions only active if wims $status != done
	  added keyword 'status' to disable this default behaviour (e.g. pupils may draw in canvas when wims $status=done 
-2/4	- added command / keyword 'snaptogrid' : a userdrawing will snap to the given grid...
	  grid 1,1,black : it will snap to all major grid lines 'n'
	  grid 1,1,black,2,2,6,grey  : will snap to all minor grid lines n/2 
	  todo: other gridfill commands may use snaptogrid
-5/4	- corrected flaw in 'normal' userdraw (without snaptogrid)

-8/4	- added to wims_svn
-11/4	- corrected flaw in snaptogrid : now works correctly for dividers xminor  and yminor (only if they are even dividers e.g. 2,4,6,8 etc)
-14/4   - added 'snaptogrid' to gridfill and dotfill (e.g. userdraw will snap to the grid)
-18/4	- added keyword 'userinput_xy' : if set 2 or 3 inputfields will be shown...the pupil will be able to 'draw' with mouse and/or by giving  a x-value and y-value (or radius-value)
	  for now: only implemented in 
	  'userdraw segment,color'
	  'userdraw segments,color'
	  'userdraw point,color'
	  'userdraw points,color'
	  'userdraw circle,color'
	  'userdraw circles,color'
	  'userdraw crosshair,color'
	  'userdraw crosshairs,color'
	  'userdraw arrow,color'
	  'userdraw arrows,color'
	  
-20/4	- work in progress: add command 'sgraph xstart,ystart,xmajor,ymajor,xminor,yminor,majorgrid_color,minorgrid_color'
	  for use as very (!) primitive 'broken axis graph'
-21/4	- corrected command grid in case xmin > 0  and / or ymin > 0
-22/4	- added semicolon ; as 'new line separator' (Marina Cazzola)
-23/4	- corrected sgraph
-24/4	- add userdraw polyline,color
	  add keyword usertextarea_xy (...)
-25/4	- add 'nok' button to remove last item from userdraw arrays
-5/5	- added commands 'ylogscale' , 'xlogscale' , 'xylogscale' , 'xlogbase' and 'ylogbase'
-10/5	- added 'userdraw polygon,color'  'userdraw line,color' and 'userdraw lines,color' to userinput_xy
	  (just more copy and paste "programming")
-11/5	- forgotten to clearRect()
-11/5	- corrected problems with ';' in html-text / text-arguments (the ';' is a command separator ... added 22/4)
-11/5	- corrected x-axis numbering in case of 'ylogscale'
-11/5	- added js function safe_eval() to command 'userinput_xy' to "safely" evaluate math inputs like 10^2 or sqrt(5)
	  corrected y-axis numbering in case of 'xlogscale'
-16/5	- command 'precision' before ylogscale / xlogscale will set the number of decimals of the x-axis / y -axis (a local variable precision is set)
	  if the mouse coordinate display or the student reply -in case of 'userdraw'-  needs a higher precision, just use as last command something like 'precision 10000' 
	  corrected mixup between userdraw polyline / polygon...
-18/5	- add replyformat 23 : used for 'userdraw polyline' : filtering out the second click on the same (+/- 5 px) point
	    x1,y1,x2,y2,x2,y2,x3,y3,x3,y3.....,x(n-1),y(n-1),x(n-1),y(n-1),xn,yn --replyformat 23-->
	    x1,y1,x2,y2,x3,y3,.....x(n-1),y(n-1),xn,yn
	- removed command 'debug'
-19/5	- added keywords 
	  'xsnaptogrid' : will snap to xmajor (or xminor, if defined)
	  'ysnaptogrid' : will snap to ymajor (or yminor, if defined)
	  'snaptogrid'  " will snap to both xmajor and ymajor (or xminor and yminor, if defined) 
-20/5	- added command 'affine a,b,c,d,tx,ty' and keyword 'killaffine'  (Marina Cazzola)
	  note: mouse coordinates (for drag / onclick) are not transformed....TODO)
-21/5	- added forgotten commande 'dvline' and 'dhline'
	  corrected command 'rays color,xc,yc,x1,y1....xn,yn' (it was using pixels instead of x/y-range coordinates)
	  removed function get_double() from canvasdraw.
-22/5	- work in progress: added command 'levelcurve' 
          I'm not sure if this should be implemented in javascript...
-23/5	- command 'levelcurve' : the quality of the curves is not to be compared with the 'Flydraw levelcurve'
	  level curve may be set 'onclick' or 'draggable'; every single curve has an unique identifier
-27/5	- javascript variable 'precision' was gone fishing 
-30/5	- added commands "trace_jsmath some_js_math_function_in_x" and "jsmath some_js_math_function_in_x" 	  
-31/5	- slightly modified "trace_jsmath some_js_math_function_in_x" and "jsmath some_js_math_function_in_x"
	- work in progress: added keyword 'setlimits'  
-1/6	- added keyword 'setlimits'
	  allowing all combinations of 'setlimits', 'trace_jsmath' ,'jsmath' , 'userinput_xy+userdraw' , mouse , drag etc
-2/6    - BPR: replace the dependance with libmatheval to the wims evaluation.	  	  
-5/6	- work in progress: 
	    added command jscurve color,formula_in_x
	    for plotting curves using clientside calculations: formula is verbatim in page-source
	    added a lightweight javascipt function to convert math into js-math (only suitable for basic stuff)
-6/6	- removed randomness from command clock (was annoying)
	- corrected typo "};else{" in javascript  replyformat 7	    
	- changed command 'grid' : now zooming and axisnumbering is slightly better...but it stays amateur scribling, grrrr...    
	- added forgotten rotate&angle arguments to commands 'string / text'
	  todo CHECK THE REST !!
	- corrected inbalance in save() / restore() causing annoying problems in command 'arc'  
-7/6	- corrected more inbalance in save() / restore() in 'draw_arrow()'
	  added commands 'userdraw arrow2' and 'userdraw arrows2'
	- added 'replyformat -1' to disable the javascript read_canvas() function 
	  (in case you want to draw something...but not send the drawing to wims..) 
-8/6	- inputfields/textarea's in canvasimage will be cleared and set 'readonly' when wims status variable is 'done'
	  overide this default behaviour with keyword 'status' or 'nostatus'
-10/6	- added '(xy)snaptogrid' to drag library
-15/6	- added timeout for floodfill and filltoborder: the canvas was not yet 'drawn' in current setup , when floodfill was called...
 	- mouseup() in draglibrary corrected 
-17/6	- modified command 'piechart' and 'legend' : now multiple piecharts with legends may be present in a single canvas image
          (barchart and linegraph are closely linked to grid: there can be multiple linegraphs in a single grid...but there can only be 1 grid)
	- adapted 'safe_eval' to accept numbers like 2.345*10^5 (previous version only accepted 10^5...)
	  added some alert message when inputstring has unfinished calculations , 'like 123 + 10^5/678'
	- added flag to avoid multiple including of safe_eval, usd by several optional things
	- if wims_status='done' all 'drawing' related input fields are removed  (eg. userinput_xy etc) 
	- zoom in y-direction was gone fishing...
	- fix stupid error in 'replyformat 23' 
	- solved issue with precision (multiple roundings  x <--> px) in read_canvas() and js-functions x2px(x) / px2x(px):last precision in script is used for reply-precision  
-18/6	- solved small issue with removal of userdraw circle	
        - added some info on 'sgraph' (...)
        - increased value MAX_INT from 64 -> 128 : this is used for several arrays in C 
-21/6	- corrected command jsplot : now more complex(...) functions may be used.
-23/6	- added command 'centerstring color,y,text' for placing a x-centered text in the canvas 
	- added "replyformat 24" read all inputfields/textareas even those set 'readonly'  
	 "replyformat 15" will only report inputfields/textareas set 'write' (eg not set 'readonly')

-27/6   


	- removed some '\n' from js include code
-28/6	- corrected preference behaviour of commands 'zoom' and 'mouse'
          ('mouse' was only active when 'zoom' function was called before 'mouse')
          Now the sequence is not important. However  both commands should be called at the end of the script 
        - added 
          'userdraw hline,color'
          'userdraw hlines,color'
          'userdraw vline,color'
          'userdraw vlines,color'
        - reverted some correction mechanism for grid / axisnumbering when zooming out...need to rething 
        - changed command 'barchart' : now "unlimited" barchart commands will be plotted in a single graph.
-29/6	- added mousex / mousey commands : just show x or y values of mouse coordinates
-25/7	Thanks to Marina:
	- corrected affine : tx/ty now in x/y-range
	- removed internal variable used by 'translate' and moved to generic 'affine matrix'
	  the translation_tx being affine_matrix[4]
	  the translation_ty being affine_matrix[5]
	  Changed several functions: new flaws in javascript may be introduced.
	- corrected command 'square x,y,side px,color'
	- corrected 'filltoborder' and 'floodfill' ... it should / could work now
remark:  hatchfill/dotfill/diamondfill are not the same as flydraw...I've  not understood the flydraw filling correctly...
	 to imitate flydraw's filling is too much work ... for both browser js-engine and me ... 
	- corrected missing dashing of 'arrow' 'arrow2'
	- corrected command 'lattice' (hope it's ok now)
-26/7	- corrected a few flaws introduced by internal changing from 'translation' to 'affine'    
-27/7	- corrected command 'square' ...
	- corrected command 'roundrect' : no inverted roundrect possible
	- corrected command 'ellipse' : switched from Beziercurve to arc-method. Should now be a true ellipse
-28/7	- added precision to the read_canvas() functions. 
	- added precision to the dragdrop library (eg. read_dragdrop() )
-4/8	- corrected command 'userdraw arc,color'
	  STILL NOT 100%  CORRECT !!
-5/8	- added replyformat 25/26 : 'userdraw arc(s),color' with degrees or radians
	- correct imagefill etc : reset() was missing (Marina)
	- adapted 'rotate angle' to be compatible with flydraw... :  -1*angle (Marina)
-14/8	- adding slider to dragstuff library : work in "progress"
-15/8	- further integration of slider: all draggable objects may have sliders (x/y/angle)
-17/8	- type: xy,x,y,angle : added slider 'rect' for xy movement
	- javascript:read_dragdrop(); will return an array  'object number:slider value'
	- if slider is used for command 'arc' the angle will be set with the slider
	- for all other object the slider will 'move' / 'rotate' the complete object
-18/8	- added keyword 'killslider'
	  now a slider may adjust several different objects...until keyword 'killslider' or next 'slider'
	  The amount of sliders in not limited
-19/8	- improved response speed of slider (in dragstuff library)
	- added command 'angle x,y,width,start,end,color' as alternative to flydraw compatible command 'arc'
	  'angle' will zoom in/out (using scale_x_radius();) and will use radians for slider values (in contrast to 'arc' which uses width/height in pixels)
	- slider using 'xy' will start & end by clicking the 'slider rect' 
	    
-20/8	- added 'use strict'; to js-include [just to make sure the js-code is "properly written"
	  hope this works for all browsers...tested on FreeBSD Opera/Firefox/Seamonkey/Chrome
	- removed 'animate' from dragstuff library : this should be done with a kind of slider...TO DO !!  
-21/8	- corrected rotation direction in case of 'slider type angle' (anti-clockwise)
	- added x/y-tics in command 'grid xmajor,ymajor,color,xminor,yminor,tics-size,axiscolor'  case of command 'xaxis' or 'yaxis'
          if the grid does not match the xaxis values:strings there will be extra tics
          for example:
size 800,200
xrange -1,7
yrange -1,1
axis
opacity 200,150
fontfamily bold 14px Ariel
xaxis 0:0:1:1:2:2:3:3:4:4:5:5:6:6:0.5*pi:\u03c0/2:pi:\u03c0:1.5*pi:3\u03c0/2:2*pi:2\u03c0:3*pi:3\u03c0:4*pi:4\u03c0 
grid 1,1,grey,4,4,10,blue
fillcolor white
circle 0,0,200,red
slider 0,2*pi,200,40,angle degree,use slider to rotate point P
linewidth 2
segment 0,0,1,0,orange
filled
fillcolor yellow
angle 0,0,0.3,0,0,green
linewidth 4
point 1,0,orange
fontfamily italic 24px Courier
string black,0.9,0.1,P
userdraw segment,orange
zoom blue

-23/8	-added 'slider | slider_degree | slider_radian' to command "display x|y|xy|degree|slider|slider_degree|slider_radian,color,fontsize"
	 work in progress
-24/8	-reverted to originale command 'display' and modified slider arguments to support a per slider display of it's value in the main canvas window

	 slider min,max,width,height,type,string
	 type: x | y | xy | angle
	 display slider values, use:
	 type: x display | y display | xy display | angle degree | angle radian
-26/8	-added command 'userdraw input,color' and 'userdraw inputs,color' [work in progress]
-27/8	-corrected flaw [sigalled by 'use strict'] in 'userdraw text,color'
	-added 'replyformat 27' : read_canvas() will return array 
	x_input_1:y_input_:1input_value_1,x_input_2:y_input_:2input_value_2...
-28/8	-added argument 'radius' to mousedisplay (in case of 'userdraw circle,color'
	display x | y | xy | degree | radius ,color,fontsize
	-corrected 'use strict' problems with 'clock' 
-29/8	-corrected 'display radius,color,fontsize' in case there is no 'userdraw circle,color' defined
	- added userdraw_x = [],yserdraw_y = [],userdraw_radius = [] to global section of javascript include
	...sometimes functions expect these array's to be defined [use strict]	
	(although I'm not happy to increase the size of the general part of the include file)
-30/8	-added command 'clearbutton button_text' to remove all user drawings from userdraw_canvas (and empty all userdraw data arrays)
-9/9	-corrected placement of inputfields 'userdraw inputs,color' (no longer can input fields be placed on top of each other
-10/9	-added keyword 'userinput_function'
-11/9	-tried to improve 'filltoborder x,y,bordercolor,fillcolor'
-20/9	-added userinput function | input | textarea as alternative command + argment to keywords "userinput_function","userinput_textarea" and "userinput_xy"
-22/9	-corrected missing js-variable declaration in 'userdraw path(s) ' [use strict] 
-25/9	-added command 'demiline x1,y1,x2,y2,color` and commands 'userdraw demiline,color' 'userdraw demilines,color'
-1/10	-multiple interactive canvasdraw scripts in a single page may now work correctly in replying the userdrawarrays and the drag&drop data..
	 
	 The native read_canvas() and read_dragdrop() are now linked to the 'canvas_root_id' and a global
	 array 'canvas_scripts' will keep track of the canvas_root_id number of scripts included in the page.
	 In the C-program, the local functions will be called 'read_canvas%d()' with '%d' is the random 'canvas_root_id'
	 
	 A special version of 'read_canvas()' and 'read_dragdrop()' should be included in the web page, something like this:
	  <!-- will return all 'userdraw' or 'userinput' data from all canvas javascript includes -->
	  function read_canvas(){
	   var script_len = canvas_scripts.length;
	   var draw_reply = "";
	   var found_result = false;
	   for(var p = 0 ; p < script_len ; p++){
	    var fun = eval("read_canvas"+canvas_scripts[p]);
	    if( typeof fun === 'function'){
	     var result = fun();
	     if( result  && result.length != 0){
	      if(script_len == 1 ){ return result;};
	      found_result = true;
	      draw_reply = draw_reply + result + "\n";
	     };
	    };
	   };
	   if( found_result ){
	    return draw_reply;
	   }
	   else
	   {
	    return null;
	   };
	  };
	  <!-- will return all 'drag&drop' or 'onclick' data from all canvas javascript includes --> 
	  function read_dragdrop(){var script_len = canvas_scripts.length;var dragdrop_reply = "";var found_result = false;for(var p = 0 ; p < script_len ; p++){var fun = eval("read_dragdrop"+canvas_scripts[p]);if(typeof fun === 'function'){var result = fun();if( result && result.length != 0 ){if(script_len == 1 ){ return result;};found_result = true;dragdrop_reply = dragdrop_reply + result +"\n";};};};if( found_result ){return dragdrop_reply;}else{return null;};};
-9/10	-now multiple functions may be plotted by user via 'userinput function' and read via read_canvas()
	-added command 'functionlabel some_string' to label the specific inputfields for function input
	 default value 'f(x)=' 
	-added simple javascript "rawmath" to convert user function input (like : 4x --> 4*x)
	-added command segments color,x1,y1,x2,y2....x_n,y_n  	[perrin]
	-added warnings when plot function input has "syntax" issues...well it's more likely that my simple math-parsers are too simple
	(but they have a small footprint...)
	like: "0.2345^1.234x" will receive a warning : it should be "(0.2345)^(1.234x)"
-11/10	-added command "circles color,x1,y1,r1,x2,y2,r2...x_n,y_n,r_n
        note: radius is not in pixels but in xy-coordinate system ! (so dragging / onclick / scaling works )
        -added command "arrows color,x1,y1,x2,y2...x_n,y_n
        -removed macro "iscalculation" and replace it by something better...
        
-17/10 -removed empty string error warning in 'char *get_string_argument(); [perrin]
       -added 'replyformat 28' to reinput date from 'userdraw circles,color' [perrin]
-29/10 -added command "arrows2 color,head px,x_1a,y_1a,x_1b,y_1b,x_2a,y_2a,x_2b,y_2b....x_na,y_na,x_nb,y_nb
	can be set draggable / onclick individually
       -corrected crosshair_size
       -corrected command "clearbutton some_text" : multiple interactive scripts in web page may have individual 'clear drawing buttons' 
       -syntax changed for command "lines color,x1,y1,x2,y2...x_n-1,y_n-1,x_n,y_n"
        "lines" will produce not connected lines through points (x1:y1)--(x2:y) etc
        "polyline" | "polylines" | "brokenline" | "brokenlines" will produce interconnected segments between the points (not closed)
        Flydraw command "lines" is equivalent to "polyline"
1/11   - corrected font behaviour of Flydraw text command.
2/11   - docs
3/11   - added commands "rects color,x1,y1,x2,y2,...." and "frects color,x1,y1,x2,y2,...."
       - added command "demilines color,x1,y1,x2,y2,...." alternative "halflines"
       - added command "hlines color,x1,y1,x2,y2,...." 
       - added command "vlines color,x1,y1,x2,y2,...."
       - added command "roundrects color,radius,x1,y1,x2,y2,...."
       - added alernative to command "polyline" : "path color,x1,y1,x2,y2,...."
       - added command "bezier color,xs,ys,x1,y1,x2,y2,x3,y3"
5/11   - added experimental command "snaptopoints x1,y1,x2,y2,..." 
	 only implemented in command "userdraw arrow(s),color"
size 400,400
xrange -10,10
yrange -10,10
linewidth 3
point 0,0,blue
points red,-6,0,-3,3,0,6,3,3,6,0,3,-3,0,-6,-3,-3
snaptopoints 0,0,-6,0,-3,3,0,6,3,3,6,0,3,-3,0,-6,-3,-3
linewidth 2
arrowhead 10
#userdraw arrows2,blue
userdraw arrow,blue

6/11	- corrected dragging (dragging was missing...) of closed polygon (triangle etc)
	- added "snaptopoints" to userdraw primitives and drag&onclick library
	- "click_cnt" counter (to identify the object in reply) only incremented when 'onclick' and / or "drag x|y|xy" is set.
	- added "xsnaptogrid,ysnaptogrid,snaptogrid,snaptopoints" to dragging of 'external images'
9/11	- fixed bug of increasing font_size when using multiple 'text' commands [perrin]	
	- changed output "function distance()" from integer to floating point. (slightly better in case of snaptopoints)
22/11	- joined draw_external_images and drag_external_images
	  image operations are now performed on a "real canvas" and no longer on a "canvas_div"
23/11	- solved issue with drawing onto external images: now a empty 'external_image' canvas is created first / per default...
          (even if there is no external image imported)
          The image may be of type BITMAP and SVG
        - synchronised size of point / points with flydraw
          now "linewidth 1" is almost invisible, just as in 'flydraw'...that is a clear improvement :) 
        - corrected command 'arc' : switched from width/height (width and height may now be different) in pixels to width / heigth in x/y-range
          analogue to command 'ellipse' 

-24/11	-corrected syntax-flaw in js-function draw_rects() ; both stroke_color and fill_color were not correctly defined
	 and thus reset to "0,0,0"
	-again tried to fix copy/copyresized (grrr)
-25/11  -added "onclick" to external images (via commands copy / copyresized)
	 see canvassdraw.html for possible usage and limitations
-7/12	-onclick objects may now be of any type (eg external images ,via copy /copyresized or any other canvas 'object')
-16/12	-corrected 'userdraw points,color' erase/redraw bug (using 'clearbutton buttontxt')
	-fixed bug when onclick external images were mixed with static external images
	-simplified onclick things in external images
-17/2	-added check on wims_status=done when using 'onclick' (otherwise objects can be 'clicked/dragged' in an answer.phtml)
	-corrected resetting of 'reply array' in case of zooming... (why did I reset this?)
	-corrected replyformat 20 (only used for external image drag&drop... outside the dragstuff library !!)
	 read_canvas() will reply "object_number:x:y" of all external images introduced by commands 'copy copyresized'
	 e.g. expect in  case of 3 external images set draggable, something like 
	 0:-5:4,1:6:2,2:-2:-5 
	 the first image position is (-5:4) , 
	 the second image position is (6:2) and 
	 the third image position is (-2:-5) 
	 note: all external images positions will be present in the 'read_canvas' array
	 (even those not set draggable)

-25/2	Internet Explorer & "use strict" : changed 'span.style="color:..." into span.setAttribute('style','color:...');
-8/4	added forgotten /*<![CDATA[*/ .... /*]]>*/ to script tag
-19/4	changing "abs" by "fabs" in case of floating point variables. (BPR) 
-21/4	corrected missing 'ctx.restore()' in case of arrow (gives very strange  rotations when using a slider to rotate only the arrow...)
-22/4	corrected 'static fontsize settings' in some js-user-input stuff, using size set by 'command fontsize int'... to be continued
-23/4	removed most static settings of fontsize and/or style.
	todo: 
	make font color in generated <span> elements adjustable via command 'strokecolor'
	make background color in generated <span> elements adjustable via command 'fillcolor'
-24/4	added experimental command 'point2point x,y,color1,color2,x-relation_1:y-relation_1: ... : x-relation_n_:y-relation_n
-28/4	removed point2point... 
	added argument 'function' to the slider objects.
	added command 
	'sliderfunction_x some_operation_on_x'  
	'sliderfunction_y some_operation_on_y'
	
	sliderfunction_x 5*sin(x)
	slider -5,5,120,10,x function display,some_text
	frect -3,3,0,0,red
	
	added command 'snaptofunction some_fun_x,some_fun_y'
	
-17/6   added experimental 'multidraw', allowing multiple drawing primitives in a single canvas image,
	using buttons to switch drawing primitive...
	The js-canvas drawfunctions will be different (simpler) compared with the single 'userdraw obj,color' functions
	(to increase speed of execution)
	
        NOT READY: many issues are still unadressed
-26/6	multi-family of commands are 'finished'
	multidraw,multidash,multistrokecolors,multifill,multifillcolors,multistrokeopacity,
	multifillopacity,multiuserinput,multilabel,multilinewidth,multisnaptogrid
	And yes, these are horrible long command names.
	When things are more mature and speed is no longer an issue, the 'single userdraw' command will be replaced by multi*
	
-7/7	added argument 'closedpoly' to command 'multidraw'
	only 1 onject can be drawn (only with mouse).The poly is closed when clicking on the first point again (+/- 10px)
	This last -duplicated- point is removed from the answer array

-8/7	revert to normal size of a point at 'linewidth = 1' (e.g. differ from ridiculous small point size of flydraw)
-12/7	added 'macro' command 'protractor x,y,x-width,type,passive_mode,value_display 
	zooming implemented, 
	left-right rotation with mouse (left click & drag),
	value display implemented,
	reply format implemented  (read_canvas())  reply[0] = x;reply[1] = y;reply[2]=angle_in_radians,
	snaptogrid implementes ( xy | x | y )
-13/7 	added command macro 'ruler x,y,x-width ,y-height,passive_mode'
-14/7   comibinations of ruler & protractor

size 400,400
xrange -5,10
yrange -5,10
hline 0,0,black
vline 0,0,black

fillcolor orange
opacity 255,40
ruler -4,3,5,1,-1,1
protractor 2,-2,6,0,-1,1,1

replyformat 32
# reply[0]...reply[2] = ruler
# reply[3]...reply[5] = protractor

-21/7  added command 'triangles color,x1,y1,x2,y2,x3,y3,...'
-26/7  added keyword 'popup'
       embedding canvasdraw into separate window xsize x ysize
       no yet suitable for communication back to wims...[work in progress]
-28/7  read_canvas and read_dragdrop in popup window
	when status=done the image will be shown in the page --> canvas_div.style.display='block'
-2/8   added 'text' to 'multidraw'
-10/8 added 'xaxisup' and modified grid extension 'barchart' using the xminor/x2step for the bar-width...
-20/8 added 'rect' and 'rects' to multidraw command
-25/8 added command 'cursor some_css_cursor'
      added several alternatives to html-doc
-30/8 multidraw primitives will now zoom / pan (added function redraw_all())
      (the single command 'userdraw type,color) will NOT ZOOM / PAN !!)
      corrected flaw in draw_points()
      minor corrections in html-doc for fontsize ; although it will not compensate for 'not-reading-the-docs' !
-3/9  added commands xerrorbars,yerrorbars to dragdrop library
-5/9  added command boxplot and jsboxplot
-12/9 now linewidth 1 == 1px and linewidth 2 == 2px
      e.g. producing crispy sharp lines : if(line_width %2 == 1){ctx.translate(0.5,0.5);}
-15/9 disabled 'crispy-lines' when zooming is activated (repeated translation of context)
      corrected -fixed- interactive boxplot stuff (js-related) 
-17/9 corrected command clock: colors are now -really- optional
-18/9 corrected command 'centerstring' : forgotten clearRect() 
-29/12 clearbutton was incompatible with chromium etc (revert to button.style = "style_text" when all browsers are supporting this construct)
       removed nonexisting 'div' argument 'tabindex=0' (thx to Perrin)
2016
-3/1  corrected fontsize flaw in commands text / textup
-4/2  added command 'rotationcenter xc,yc' and keyword 'killrotate'
-15/2 corrected filling in command 'arc'
      difference between 'arc' and 'angle' : 'arc' may set width+height (ellipse)
4/7   using '\t' as command separator (for use within OEF)
10/9  corrected slider display (arguments "display x" and "display y" always showed "x : y" values 
      added some html info   