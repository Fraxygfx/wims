This file contains any messages produced by compilers while
running configure, to aid debugging if configure makes a mistake.

It was created by libmatheval configure 1.1.8, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  $ ./configure --prefix=/var/wims/src/Misc/canvasdraw --enable-static --disable-shared --no-create --no-recursion

## --------- ##
## Platform. ##
## --------- ##

hostname = vrijdag
uname -m = i386
uname -r = 9.1-RELEASE
uname -s = FreeBSD
uname -v = FreeBSD 9.1-RELEASE #22: Fri Jul  5 15:53:51 CEST 2013     root@vrijdag:/usr/obj/usr/src/sys/VRIJDAG-III 

/usr/bin/uname -p = i386
/bin/uname -X     = unknown

/bin/arch              = unknown
/usr/bin/arch -k       = unknown
/usr/convex/getsysinfo = unknown
/usr/bin/hostinfo      = unknown
/bin/machine           = unknown
/usr/bin/oslevel       = unknown
/bin/universe          = unknown

PATH: /sbin
PATH: /bin
PATH: /usr/sbin
PATH: /usr/bin
PATH: /usr/games
PATH: /usr/local/sbin
PATH: /usr/local/bin
PATH: /usr/X11R6/bin
PATH: /root/bin


## ----------- ##
## Core tests. ##
## ----------- ##

configure:2311: checking for a BSD-compatible install
configure:2379: result: /usr/bin/install -c
configure:2390: checking whether build environment is sane
configure:2440: result: yes
configure:2581: checking for a thread-safe mkdir -p
configure:2620: result: config/install-sh -c -d
configure:2633: checking for gawk
configure:2649: found /usr/local/bin/gawk
configure:2660: result: gawk
configure:2671: checking whether make sets $(MAKE)
configure:2693: result: yes
configure:2826: checking for gcc
configure:2842: found /usr/bin/gcc
configure:2853: result: gcc
configure:3082: checking for C compiler version
configure:3091: gcc --version >&5
gcc (GCC) 4.2.1 20070831 patched [FreeBSD]
Copyright (C) 2007 Free Software Foundation, Inc.
This is free software; see the source for copying conditions.  There is NO
warranty; not even for MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.

configure:3102: $? = 0
configure:3091: gcc -v >&5
Using built-in specs.
Target: i386-undermydesk-freebsd
Configured with: FreeBSD/i386 system compiler
Thread model: posix
gcc version 4.2.1 20070831 patched [FreeBSD]
configure:3102: $? = 0
configure:3091: gcc -V >&5
gcc: '-V' option must have argument
configure:3102: $? = 1
configure:3091: gcc -qversion >&5
gcc: unrecognized option '-qversion'
gcc: No input files specified
configure:3102: $? = 1
configure:3122: checking whether the C compiler works
configure:3144: gcc    conftest.c  >&5
configure:3148: $? = 0
configure:3196: result: yes
configure:3199: checking for C compiler default output file name
configure:3201: result: a.out
configure:3207: checking for suffix of executables
configure:3214: gcc -o conftest    conftest.c  >&5
configure:3218: $? = 0
configure:3240: result: 
configure:3262: checking whether we are cross compiling
configure:3270: gcc -o conftest    conftest.c  >&5
configure:3274: $? = 0
configure:3281: ./conftest
configure:3285: $? = 0
configure:3300: result: no
configure:3305: checking for suffix of object files
configure:3327: gcc -c   conftest.c >&5
configure:3331: $? = 0
configure:3352: result: o
configure:3356: checking whether we are using the GNU C compiler
configure:3375: gcc -c   conftest.c >&5
configure:3375: $? = 0
configure:3384: result: yes
configure:3393: checking whether gcc accepts -g
configure:3413: gcc -c -g  conftest.c >&5
configure:3413: $? = 0
configure:3454: result: yes
configure:3471: checking for gcc option to accept ISO C89
configure:3534: gcc  -c -g -O2  conftest.c >&5
configure:3534: $? = 0
configure:3547: result: none needed
configure:3578: checking for style of include used by make
configure:3606: result: GNU
configure:3631: checking dependency style of gcc
configure:3741: result: gcc3
configure:3757: checking whether gcc and cc understand -c and -o together
configure:3788: gcc -c conftest.c -o conftest2.o >&5
configure:3792: $? = 0
configure:3798: gcc -c conftest.c -o conftest2.o >&5
configure:3802: $? = 0
configure:3813: cc -c conftest.c >&5
configure:3817: $? = 0
configure:3825: cc -c conftest.c -o conftest2.o >&5
configure:3829: $? = 0
configure:3835: cc -c conftest.c -o conftest2.o >&5
configure:3839: $? = 0
configure:3857: result: yes
configure:3882: checking for gcc option to accept ISO C99
configure:4031: gcc  -c -g -O2  conftest.c >&5
conftest.c:61: error: expected ';', ',' or ')' before 'text'
conftest.c: In function 'main':
conftest.c:115: error: expected '=', ',', ';', 'asm' or '__attribute__' before 'newvar'
conftest.c:115: error: 'newvar' undeclared (first use in this function)
conftest.c:115: error: (Each undeclared identifier is reported only once
conftest.c:115: error: for each function it appears in.)
conftest.c:125: error: 'for' loop initial declaration used outside C99 mode
configure:4031: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libmatheval"
| #define PACKAGE_TARNAME "libmatheval"
| #define PACKAGE_VERSION "1.1.8"
| #define PACKAGE_STRING "libmatheval 1.1.8"
| #define PACKAGE_BUGREPORT "asamardzic@gnu.org"
| #define PACKAGE_URL ""
| #define PACKAGE "libmatheval"
| #define VERSION "1.1.8"
| /* end confdefs.h.  */
| #include <stdarg.h>
| #include <stdbool.h>
| #include <stdlib.h>
| #include <wchar.h>
| #include <stdio.h>
| 
| // Check varargs macros.  These examples are taken from C99 6.10.3.5.
| #define debug(...) fprintf (stderr, __VA_ARGS__)
| #define showlist(...) puts (#__VA_ARGS__)
| #define report(test,...) ((test) ? puts (#test) : printf (__VA_ARGS__))
| static void
| test_varargs_macros (void)
| {
|   int x = 1234;
|   int y = 5678;
|   debug ("Flag");
|   debug ("X = %d\n", x);
|   showlist (The first, second, and third items.);
|   report (x>y, "x is %d but y is %d", x, y);
| }
| 
| // Check long long types.
| #define BIG64 18446744073709551615ull
| #define BIG32 4294967295ul
| #define BIG_OK (BIG64 / BIG32 == 4294967297ull && BIG64 % BIG32 == 0)
| #if !BIG_OK
|   your preprocessor is broken;
| #endif
| #if BIG_OK
| #else
|   your preprocessor is broken;
| #endif
| static long long int bignum = -9223372036854775807LL;
| static unsigned long long int ubignum = BIG64;
| 
| struct incomplete_array
| {
|   int datasize;
|   double data[];
| };
| 
| struct named_init {
|   int number;
|   const wchar_t *name;
|   double average;
| };
| 
| typedef const char *ccp;
| 
| static inline int
| test_restrict (ccp restrict text)
| {
|   // See if C++-style comments work.
|   // Iterate through items via the restricted pointer.
|   // Also check for declarations in for loops.
|   for (unsigned int i = 0; *(text+i) != '\0'; ++i)
|     continue;
|   return 0;
| }
| 
| // Check varargs and va_copy.
| static void
| test_varargs (const char *format, ...)
| {
|   va_list args;
|   va_start (args, format);
|   va_list args_copy;
|   va_copy (args_copy, args);
| 
|   const char *str;
|   int number;
|   float fnumber;
| 
|   while (*format)
|     {
|       switch (*format++)
| 	{
| 	case 's': // string
| 	  str = va_arg (args_copy, const char *);
| 	  break;
| 	case 'd': // int
| 	  number = va_arg (args_copy, int);
| 	  break;
| 	case 'f': // float
| 	  fnumber = va_arg (args_copy, double);
| 	  break;
| 	default:
| 	  break;
| 	}
|     }
|   va_end (args_copy);
|   va_end (args);
| }
| 
| int
| main ()
| {
| 
|   // Check bool.
|   _Bool success = false;
| 
|   // Check restrict.
|   if (test_restrict ("String literal") == 0)
|     success = true;
|   char *restrict newvar = "Another string";
| 
|   // Check varargs.
|   test_varargs ("s, d' f .", "string", 65, 34.234);
|   test_varargs_macros ();
| 
|   // Check flexible array members.
|   struct incomplete_array *ia =
|     malloc (sizeof (struct incomplete_array) + (sizeof (double) * 10));
|   ia->datasize = 10;
|   for (int i = 0; i < ia->datasize; ++i)
|     ia->data[i] = i * 1.234;
| 
|   // Check named initializers.
|   struct named_init ni = {
|     .number = 34,
|     .name = L"Test wide string",
|     .average = 543.34343,
|   };
| 
|   ni.number = 58;
| 
|   int dynamic_array[ni.number];
|   dynamic_array[ni.number - 1] = 543;
| 
|   // work around unused variable warnings
|   return (!success || bignum == 0LL || ubignum == 0uLL || newvar[0] == 'x'
| 	  || dynamic_array[ni.number - 1] != 543);
| 
|   ;
|   return 0;
| }
configure:4031: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:4031: $? = 0
configure:4051: result: -std=gnu99
configure:4064: checking how to run the C preprocessor
configure:4095: gcc -std=gnu99 -E  conftest.c
configure:4095: $? = 0
configure:4109: gcc -std=gnu99 -E  conftest.c
conftest.c:11:28: error: ac_nonexistent.h: No such file or directory
configure:4109: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libmatheval"
| #define PACKAGE_TARNAME "libmatheval"
| #define PACKAGE_VERSION "1.1.8"
| #define PACKAGE_STRING "libmatheval 1.1.8"
| #define PACKAGE_BUGREPORT "asamardzic@gnu.org"
| #define PACKAGE_URL ""
| #define PACKAGE "libmatheval"
| #define VERSION "1.1.8"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:4134: result: gcc -std=gnu99 -E
configure:4154: gcc -std=gnu99 -E  conftest.c
configure:4154: $? = 0
configure:4168: gcc -std=gnu99 -E  conftest.c
conftest.c:11:28: error: ac_nonexistent.h: No such file or directory
configure:4168: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libmatheval"
| #define PACKAGE_TARNAME "libmatheval"
| #define PACKAGE_VERSION "1.1.8"
| #define PACKAGE_STRING "libmatheval 1.1.8"
| #define PACKAGE_BUGREPORT "asamardzic@gnu.org"
| #define PACKAGE_URL ""
| #define PACKAGE "libmatheval"
| #define VERSION "1.1.8"
| /* end confdefs.h.  */
| #include <ac_nonexistent.h>
configure:4202: checking for flex
configure:4218: found /usr/bin/flex
configure:4229: result: flex
configure:4267: flex conftest.l
configure:4271: $? = 0
configure:4273: checking lex output file root
configure:4287: result: lex.yy
configure:4292: checking lex library
configure:4306: gcc -std=gnu99 -o conftest -g -O2   conftest.c   >&5
/tmp//ccGxL6R8.o: In function `input':
/var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/lex.yy.c:1109: undefined reference to `yywrap'
/tmp//ccGxL6R8.o: In function `yylex':
/var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/lex.yy.c:753: undefined reference to `yywrap'
/tmp//ccGxL6R8.o: In function `main':
/var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/conftest.l:17: undefined reference to `yywrap'
configure:4306: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libmatheval"
| #define PACKAGE_TARNAME "libmatheval"
| #define PACKAGE_VERSION "1.1.8"
| #define PACKAGE_STRING "libmatheval 1.1.8"
| #define PACKAGE_BUGREPORT "asamardzic@gnu.org"
| #define PACKAGE_URL ""
| #define PACKAGE "libmatheval"
| #define VERSION "1.1.8"
| /* end confdefs.h.  */
| /* A lexical scanner generated by flex */
| 
| /* Scanner skeleton version:
|  * $Header: /home/daffy/u0/vern/flex/RCS/flex.skl,v 2.91 96/09/10 16:58:48 vern Exp $
|  * $FreeBSD: release/9.1.0/usr.bin/lex/flex.skl 214272 2010-10-24 15:31:41Z uqs $
|  */
| 
| #if defined(__FreeBSD__)
| #include <sys/cdefs.h>
| #else
| #define __unused
| #define __dead2
| #endif
| 
| #define FLEX_SCANNER
| #define YY_FLEX_MAJOR_VERSION 2
| #define YY_FLEX_MINOR_VERSION 5
| 
| #include <stdio.h>
| 
| 
| /* cfront 1.2 defines "c_plusplus" instead of "__cplusplus" */
| #ifdef c_plusplus
| #ifndef __cplusplus
| #define __cplusplus
| #endif
| #endif
| 
| 
| #ifdef __cplusplus
| 
| #include <stdlib.h>
| #include <unistd.h>
| 
| /* Use prototypes in function declarations. */
| #define YY_USE_PROTOS
| 
| /* The "const" storage-class-modifier is valid. */
| #define YY_USE_CONST
| 
| #else	/* ! __cplusplus */
| 
| #if __STDC__
| 
| #define YY_USE_PROTOS
| #define YY_USE_CONST
| 
| #endif	/* __STDC__ */
| #endif	/* ! __cplusplus */
| 
| #ifdef __TURBOC__
|  #pragma warn -rch
|  #pragma warn -use
| #include <io.h>
| #include <stdlib.h>
| #define YY_USE_CONST
| #define YY_USE_PROTOS
| #endif
| 
| #ifdef YY_USE_CONST
| #define yyconst const
| #else
| #define yyconst
| #endif
| 
| 
| #ifdef YY_USE_PROTOS
| #define YY_PROTO(proto) proto
| #else
| #define YY_PROTO(proto) ()
| #endif
| 
| /* Returned upon end-of-file. */
| #define YY_NULL 0
| 
| /* Promotes a possibly negative, possibly signed char to an unsigned
|  * integer for use as an array index.  If the signed char is negative,
|  * we want to instead treat it as an 8-bit unsigned char, hence the
|  * double cast.
|  */
| #define YY_SC_TO_UI(c) ((unsigned int) (unsigned char) c)
| 
| /* Enter a start condition.  This macro really ought to take a parameter,
|  * but we do it the disgusting crufty way forced on us by the ()-less
|  * definition of BEGIN.
|  */
| #define BEGIN yy_start = 1 + 2 *
| 
| /* Translate the current start state into a value that can be later handed
|  * to BEGIN to return to the state.  The YYSTATE alias is for lex
|  * compatibility.
|  */
| #define YY_START ((yy_start - 1) / 2)
| #define YYSTATE YY_START
| 
| /* Action number for EOF rule of a given start state. */
| #define YY_STATE_EOF(state) (YY_END_OF_BUFFER + state + 1)
| 
| /* Special action meaning "start processing a new file". */
| #define YY_NEW_FILE yyrestart( yyin )
| 
| #define YY_END_OF_BUFFER_CHAR 0
| 
| /* Size of default input buffer. */
| #define YY_BUF_SIZE 16384
| 
| typedef struct yy_buffer_state *YY_BUFFER_STATE;
| 
| extern int yyleng;
| extern FILE *yyin, *yyout;
| 
| #define EOB_ACT_CONTINUE_SCAN 0
| #define EOB_ACT_END_OF_FILE 1
| #define EOB_ACT_LAST_MATCH 2
| 
| /* The funky do-while in the following #define is used to turn the definition
|  * int a single C statement (which needs a semi-colon terminator).  This
|  * avoids problems with code like:
|  *
|  * 	if ( condition_holds )
|  *		yyless( 5 );
|  *	else
|  *		do_something_else();
|  *
|  * Prior to using the do-while the compiler would get upset at the
|  * "else" because it interpreted the "if" statement as being all
|  * done when it reached the ';' after the yyless() call.
|  */
| 
| /* Return all but the first 'n' matched characters back to the input stream. */
| 
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
| 		*yy_cp = yy_hold_char; \
| 		YY_RESTORE_YY_MORE_OFFSET \
| 		yy_c_buf_p = yy_cp = yy_bp + n - YY_MORE_ADJ; \
| 		YY_DO_BEFORE_ACTION; /* set up yytext again */ \
| 		} \
| 	while ( 0 )
| 
| #define unput(c) yyunput( c, yytext_ptr )
| 
| /* The following is because we cannot portably get our hands on size_t
|  * (without autoconf's help, which isn't available because we want
|  * flex-generated scanners to compile on their own).
|  */
| typedef unsigned int yy_size_t;
| 
| 
| struct yy_buffer_state
| 	{
| 	FILE *yy_input_file;
| 
| 	char *yy_ch_buf;		/* input buffer */
| 	char *yy_buf_pos;		/* current position in input buffer */
| 
| 	/* Size of input buffer in bytes, not including room for EOB
| 	 * characters.
| 	 */
| 	yy_size_t yy_buf_size;
| 
| 	/* Number of characters read into yy_ch_buf, not including EOB
| 	 * characters.
| 	 */
| 	int yy_n_chars;
| 
| 	/* Whether we "own" the buffer - i.e., we know we created it,
| 	 * and can realloc() it to grow it, and should free() it to
| 	 * delete it.
| 	 */
| 	int yy_is_our_buffer;
| 
| 	/* Whether this is an "interactive" input source; if so, and
| 	 * if we're using stdio for input, then we want to use getc()
| 	 * instead of fread(), to make sure we stop fetching input after
| 	 * each newline.
| 	 */
| 	int yy_is_interactive;
| 
| 	/* Whether we're considered to be at the beginning of a line.
| 	 * If so, '^' rules will be active on the next match, otherwise
| 	 * not.
| 	 */
| 	int yy_at_bol;
| 
| 	/* Whether to try to fill the input buffer when we reach the
| 	 * end of it.
| 	 */
| 	int yy_fill_buffer;
| 
| 	int yy_buffer_status;
| #define YY_BUFFER_NEW 0
| #define YY_BUFFER_NORMAL 1
| 	/* When an EOF's been seen but there's still some text to process
| 	 * then we mark the buffer as YY_EOF_PENDING, to indicate that we
| 	 * shouldn't try reading from the input source any more.  We might
| 	 * still have a bunch of tokens to match, though, because of
| 	 * possible backing-up.
| 	 *
| 	 * When we actually see the EOF, we change the status to "new"
| 	 * (via yyrestart()), so that the user can continue scanning by
| 	 * just pointing yyin at a new input file.
| 	 */
| #define YY_BUFFER_EOF_PENDING 2
| 	};
| 
| static YY_BUFFER_STATE yy_current_buffer = 0;
| 
| /* We provide macros for accessing buffer states in case in the
|  * future we want to put the buffer states in a more general
|  * "scanner state".
|  */
| #define YY_CURRENT_BUFFER yy_current_buffer
| 
| 
| /* yy_hold_char holds the character lost when yytext is formed. */
| static char yy_hold_char;
| 
| static int yy_n_chars;		/* number of characters read into yy_ch_buf */
| 
| 
| int yyleng;
| 
| /* Points to current character in buffer. */
| static char *yy_c_buf_p = (char *) 0;
| static int yy_init = 1;		/* whether we need to initialize */
| static int yy_start = 0;	/* start state number */
| 
| /* Flag which is used to allow yywrap()'s to do buffer switches
|  * instead of setting up a fresh yyin.  A bit of a hack ...
|  */
| static int yy_did_buffer_switch_on_eof;
| 
| void yyrestart YY_PROTO(( FILE *input_file ));
| 
| void yy_switch_to_buffer YY_PROTO(( YY_BUFFER_STATE new_buffer ));
| void yy_load_buffer_state YY_PROTO(( void ));
| YY_BUFFER_STATE yy_create_buffer YY_PROTO(( FILE *file, int size ));
| void yy_delete_buffer YY_PROTO(( YY_BUFFER_STATE b ));
| void yy_init_buffer YY_PROTO(( YY_BUFFER_STATE b, FILE *file ));
| void yy_flush_buffer YY_PROTO(( YY_BUFFER_STATE b ));
| #define YY_FLUSH_BUFFER yy_flush_buffer( yy_current_buffer )
| 
| YY_BUFFER_STATE yy_scan_buffer YY_PROTO(( char *base, yy_size_t size ));
| YY_BUFFER_STATE yy_scan_string YY_PROTO(( yyconst char *yy_str ));
| YY_BUFFER_STATE yy_scan_bytes YY_PROTO(( yyconst char *bytes, int len ));
| 
| static void *yy_flex_alloc YY_PROTO(( yy_size_t ));
| static void *yy_flex_realloc YY_PROTO(( void *, yy_size_t )) __unused;
| static void yy_flex_free YY_PROTO(( void * ));
| 
| #define yy_new_buffer yy_create_buffer
| 
| #define yy_set_interactive(is_interactive) \
| 	{ \
| 	if ( ! yy_current_buffer ) \
| 		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	yy_current_buffer->yy_is_interactive = is_interactive; \
| 	}
| 
| #define yy_set_bol(at_bol) \
| 	{ \
| 	if ( ! yy_current_buffer ) \
| 		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE ); \
| 	yy_current_buffer->yy_at_bol = at_bol; \
| 	}
| 
| #define YY_AT_BOL() (yy_current_buffer->yy_at_bol)
| 
| 
| #define YY_USES_REJECT
| typedef unsigned char YY_CHAR;
| FILE *yyin = (FILE *) 0, *yyout = (FILE *) 0;
| typedef int yy_state_type;
| extern char *yytext;
| #define yytext_ptr yytext
| 
| static yy_state_type yy_get_previous_state YY_PROTO(( void ));
| static yy_state_type yy_try_NUL_trans YY_PROTO(( yy_state_type current_state ));
| static int yy_get_next_buffer YY_PROTO(( void ));
| static void yy_fatal_error YY_PROTO(( yyconst char msg[] )) __dead2;
| 
| /* Done after the current pattern has been matched and before the
|  * corresponding action - sets up yytext.
|  */
| #define YY_DO_BEFORE_ACTION \
| 	yytext_ptr = yy_bp; \
| 	yytext_ptr -= yy_more_len; \
| 	yyleng = (int) (yy_cp - yytext_ptr); \
| 	yy_hold_char = *yy_cp; \
| 	*yy_cp = '\0'; \
| 	yy_c_buf_p = yy_cp;
| 
| #define YY_NUM_RULES 8
| #define YY_END_OF_BUFFER 9
| static yyconst short int yy_acclist[23] =
|     {   0,
|         9,    7,    8,    8,    1,    7,    8,    2,    7,    8,
|         3,    7,    8,    4,    7,    8,    5,    7,    8,    6,
|         7,    8
|     } ;
| 
| static yyconst short int yy_accept[14] =
|     {   0,
|         1,    1,    1,    2,    4,    5,    8,   11,   14,   17,
|        20,   23,   23
|     } ;
| 
| static yyconst int yy_ec[256] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    2,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    3,    4,    5,    6,
| 
|         7,    8,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
| 
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1,    1,    1,    1,    1,    1,
|         1,    1,    1,    1,    1
|     } ;
| 
| static yyconst int yy_meta[9] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1
|     } ;
| 
| static yyconst short int yy_base[13] =
|     {   0,
|         0,    0,    9,   10,   10,   10,   10,   10,   10,   10,
|        10,   10
|     } ;
| 
| static yyconst short int yy_def[13] =
|     {   0,
|        12,    1,   12,   12,   12,   12,   12,   12,   12,   12,
|        12,    0
|     } ;
| 
| static yyconst short int yy_nxt[19] =
|     {   0,
|         4,    5,    6,    7,    8,    9,   10,   11,   12,    3,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yyconst short int yy_chk[19] =
|     {   0,
|         1,    1,    1,    1,    1,    1,    1,    1,    3,   12,
|        12,   12,   12,   12,   12,   12,   12,   12
|     } ;
| 
| static yy_state_type yy_state_buf[YY_BUF_SIZE + 2], *yy_state_ptr;
| static char *yy_full_match;
| static int yy_lp;
| #define REJECT \
| { \
| *yy_cp = yy_hold_char; /* undo effects of setting up yytext */ \
| yy_cp = yy_full_match; /* restore poss. backed-over text */ \
| ++yy_lp; \
| goto find_rule; \
| }
| static int yy_more_flag = 0;
| static int yy_more_len = 0;
| #define yymore() (yy_more_flag = 1)
| #define YY_MORE_ADJ yy_more_len
| #define YY_RESTORE_YY_MORE_OFFSET
| char *yytext;
| #line 1 "conftest.l"
| #define INITIAL 0
| #line 391 "lex.yy.c"
| 
| /* Macros after this point can all be overridden by user definitions in
|  * section 1.
|  */
| 
| #ifndef YY_SKIP_YYWRAP
| #ifdef __cplusplus
| extern "C" int yywrap YY_PROTO(( void ));
| #else
| extern int yywrap YY_PROTO(( void ));
| #endif
| #endif
| 
| #ifndef YY_NO_UNPUT
| static void yyunput YY_PROTO(( int c, char *buf_ptr ));
| #endif
| 
| #ifndef yytext_ptr
| static void yy_flex_strncpy YY_PROTO(( char *, yyconst char *, int ));
| #endif
| 
| #ifdef YY_NEED_STRLEN
| static int yy_flex_strlen YY_PROTO(( yyconst char * ));
| #endif
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
| static int yyinput YY_PROTO(( void ));
| #else
| static int input YY_PROTO(( void ));
| #endif
| #endif
| 
| #if YY_STACK_USED
| static int yy_start_stack_ptr = 0;
| static int yy_start_stack_depth = 0;
| static int *yy_start_stack = 0;
| #ifndef YY_NO_PUSH_STATE
| static void yy_push_state YY_PROTO(( int new_state ));
| #endif
| #ifndef YY_NO_POP_STATE
| static void yy_pop_state YY_PROTO(( void ));
| #endif
| #ifndef YY_NO_TOP_STATE
| static int yy_top_state YY_PROTO(( void ));
| #endif
| 
| #else
| #define YY_NO_PUSH_STATE 1
| #define YY_NO_POP_STATE 1
| #define YY_NO_TOP_STATE 1
| #endif
| 
| #ifdef YY_MALLOC_DECL
| YY_MALLOC_DECL
| #else
| #if __STDC__
| #ifndef __cplusplus
| #include <stdlib.h>
| #endif
| #else
| /* Just try to get by without declaring the routines.  This will fail
|  * miserably on non-ANSI systems for which sizeof(size_t) != sizeof(int)
|  * or sizeof(void*) != sizeof(int).
|  */
| #endif
| #endif
| 
| /* Amount of stuff to slurp up with each read. */
| #ifndef YY_READ_BUF_SIZE
| #define YY_READ_BUF_SIZE 8192
| #endif
| 
| /* Copy whatever the last rule matched to the standard output. */
| 
| #ifndef ECHO
| /* This used to be an fputs(), but since the string might contain NUL's,
|  * we now use fwrite().
|  */
| #define ECHO (void) fwrite( yytext, yyleng, 1, yyout )
| #endif
| 
| /* Gets input and stuffs it into "buf".  number of characters read, or YY_NULL,
|  * is returned in "result".
|  */
| #ifndef YY_INPUT
| #define YY_INPUT(buf,result,max_size) \
| 	if ( yy_current_buffer->yy_is_interactive ) \
| 		{ \
| 		int c = '*', n; \
| 		for ( n = 0; n < max_size && \
| 			     (c = getc( yyin )) != EOF && c != '\n'; ++n ) \
| 			buf[n] = (char) c; \
| 		if ( c == '\n' ) \
| 			buf[n++] = (char) c; \
| 		if ( c == EOF && ferror( yyin ) ) \
| 			YY_FATAL_ERROR( "input in flex scanner failed" ); \
| 		result = n; \
| 		} \
| 	else if ( ((result = fread( buf, 1, max_size, yyin )) == 0) \
| 		  && ferror( yyin ) ) \
| 		YY_FATAL_ERROR( "input in flex scanner failed" );
| #endif
| 
| /* No semi-colon after return; correct usage is to write "yyterminate();" -
|  * we don't want an extra ';' after the "return" because that will cause
|  * some compilers to complain about unreachable statements.
|  */
| #ifndef yyterminate
| #define yyterminate() return YY_NULL
| #endif
| 
| /* Number of entries by which start-condition stack grows. */
| #ifndef YY_START_STACK_INCR
| #define YY_START_STACK_INCR 25
| #endif
| 
| /* Report a fatal error. */
| #ifndef YY_FATAL_ERROR
| #define YY_FATAL_ERROR(msg) yy_fatal_error( msg )
| #endif
| 
| /* Default declaration of generated scanner - a define so the user can
|  * easily add parameters.
|  */
| #ifndef YY_DECL
| #define YY_DECL int yylex YY_PROTO(( void ))
| #endif
| 
| /* Code executed at the beginning of each rule, after yytext and yyleng
|  * have been set up.
|  */
| #ifndef YY_USER_ACTION
| #define YY_USER_ACTION
| #endif
| 
| /* Code executed at the end of each rule. */
| #ifndef YY_BREAK
| #define YY_BREAK break;
| #endif
| 
| #define YY_RULE_SETUP \
| 	YY_USER_ACTION
| 
| YY_DECL
| 	{
| 	yy_state_type yy_current_state;
| 	char *yy_cp, *yy_bp;
| 	int yy_act;
| 
| #line 1 "conftest.l"
| 
| #line 544 "lex.yy.c"
| 
| 	if ( yy_init )
| 		{
| 		yy_init = 0;
| 
| #ifdef YY_USER_INIT
| 		YY_USER_INIT;
| #endif
| 
| 		if ( ! yy_start )
| 			yy_start = 1;	/* first start state */
| 
| 		if ( ! yyin )
| 			yyin = stdin;
| 
| 		if ( ! yyout )
| 			yyout = stdout;
| 
| 		if ( ! yy_current_buffer )
| 			yy_current_buffer =
| 				yy_create_buffer( yyin, YY_BUF_SIZE );
| 
| 		yy_load_buffer_state();
| 		}
| 
| 	while ( 1 )		/* loops until end-of-file is reached */
| 		{
| 		yy_more_len = 0;
| 		if ( yy_more_flag )
| 			{
| 			yy_more_len = yy_c_buf_p - yytext_ptr;
| 			yy_more_flag = 0;
| 			}
| 		yy_cp = yy_c_buf_p;
| 
| 		/* Support of yytext. */
| 		*yy_cp = yy_hold_char;
| 
| 		/* yy_bp points to the position in yy_ch_buf of the start of
| 		 * the current run.
| 		 */
| 		yy_bp = yy_cp;
| 
| 		yy_current_state = yy_start;
| 		yy_state_ptr = yy_state_buf;
| 		*yy_state_ptr++ = yy_current_state;
| yy_match:
| 		do
| 			{
| 			YY_CHAR yy_c = yy_ec[YY_SC_TO_UI(*yy_cp)];
| 			while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 				{
| 				yy_current_state = (int) yy_def[yy_current_state];
| 				if ( yy_current_state >= 13 )
| 					yy_c = yy_meta[(unsigned int) yy_c];
| 				}
| 			yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 			*yy_state_ptr++ = yy_current_state;
| 			++yy_cp;
| 			}
| 		while ( yy_base[yy_current_state] != 10 );
| 
| yy_find_action:
| 		yy_current_state = *--yy_state_ptr;
| 		yy_lp = yy_accept[yy_current_state];
| goto find_rule; /* avoid `defined but not used' warning */
| find_rule: /* we branch to this label when backing up */
| 		for ( ; ; ) /* until we find what rule we matched */
| 			{
| 			if ( yy_lp && yy_lp < yy_accept[yy_current_state + 1] )
| 				{
| 				yy_act = yy_acclist[yy_lp];
| 					{
| 					yy_full_match = yy_cp;
| 					break;
| 					}
| 				}
| 			--yy_cp;
| 			yy_current_state = *--yy_state_ptr;
| 			yy_lp = yy_accept[yy_current_state];
| 			}
| 
| 		YY_DO_BEFORE_ACTION;
| 
| 
| do_action:	/* This label is used only to access EOF actions. */
| 
| 
| 		switch ( yy_act )
| 	{ /* beginning of action switch */
| case 1:
| YY_RULE_SETUP
| #line 2 "conftest.l"
| { ECHO; }
| 	YY_BREAK
| case 2:
| YY_RULE_SETUP
| #line 3 "conftest.l"
| { REJECT; }
| 	YY_BREAK
| case 3:
| YY_RULE_SETUP
| #line 4 "conftest.l"
| { yymore (); }
| 	YY_BREAK
| case 4:
| YY_RULE_SETUP
| #line 5 "conftest.l"
| { yyless (1); }
| 	YY_BREAK
| case 5:
| YY_RULE_SETUP
| #line 6 "conftest.l"
| { /* IRIX 6.5 flex 2.5.4 underquotes its yyless argument.  */
|     yyless ((input () != 0)); }
| 	YY_BREAK
| case 6:
| YY_RULE_SETUP
| #line 8 "conftest.l"
| { unput (yytext[0]); }
| 	YY_BREAK
| case 7:
| YY_RULE_SETUP
| #line 9 "conftest.l"
| { BEGIN INITIAL; }
| 	YY_BREAK
| case 8:
| YY_RULE_SETUP
| #line 10 "conftest.l"
| ECHO;
| 	YY_BREAK
| #line 676 "lex.yy.c"
| 			case YY_STATE_EOF(INITIAL):
| 				yyterminate();
| 
| 	case YY_END_OF_BUFFER:
| 		{
| 		/* Amount of text matched not including the EOB char. */
| 		int yy_amount_of_matched_text = (int) (yy_cp - yytext_ptr) - 1;
| 
| 		/* Undo the effects of YY_DO_BEFORE_ACTION. */
| 		*yy_cp = yy_hold_char;
| 		YY_RESTORE_YY_MORE_OFFSET
| 
| 		if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_NEW )
| 			{
| 			/* We're scanning a new file or input source.  It's
| 			 * possible that this happened because the user
| 			 * just pointed yyin at a new source and called
| 			 * yylex().  If so, then we have to assure
| 			 * consistency between yy_current_buffer and our
| 			 * globals.  Here is the right place to do so, because
| 			 * this is the first action (other than possibly a
| 			 * back-up) that will match for the new input source.
| 			 */
| 			yy_n_chars = yy_current_buffer->yy_n_chars;
| 			yy_current_buffer->yy_input_file = yyin;
| 			yy_current_buffer->yy_buffer_status = YY_BUFFER_NORMAL;
| 			}
| 
| 		/* Note that here we test for yy_c_buf_p "<=" to the position
| 		 * of the first EOB in the buffer, since yy_c_buf_p will
| 		 * already have been incremented past the NUL character
| 		 * (since all states make transitions on EOB to the
| 		 * end-of-buffer state).  Contrast this with the test
| 		 * in input().
| 		 */
| 		if ( yy_c_buf_p <= &yy_current_buffer->yy_ch_buf[yy_n_chars] )
| 			{ /* This was really a NUL. */
| 			yy_state_type yy_next_state;
| 
| 			yy_c_buf_p = yytext_ptr + yy_amount_of_matched_text;
| 
| 			yy_current_state = yy_get_previous_state();
| 
| 			/* Okay, we're now positioned to make the NUL
| 			 * transition.  We couldn't have
| 			 * yy_get_previous_state() go ahead and do it
| 			 * for us because it doesn't know how to deal
| 			 * with the possibility of jamming (and we don't
| 			 * want to build jamming into it because then it
| 			 * will run more slowly).
| 			 */
| 
| 			yy_next_state = yy_try_NUL_trans( yy_current_state );
| 
| 			yy_bp = yytext_ptr + YY_MORE_ADJ;
| 
| 			if ( yy_next_state )
| 				{
| 				/* Consume the NUL. */
| 				yy_cp = ++yy_c_buf_p;
| 				yy_current_state = yy_next_state;
| 				goto yy_match;
| 				}
| 
| 			else
| 				{
| 				yy_cp = yy_c_buf_p;
| 				goto yy_find_action;
| 				}
| 			}
| 
| 		else switch ( yy_get_next_buffer() )
| 			{
| 			case EOB_ACT_END_OF_FILE:
| 				{
| 				yy_did_buffer_switch_on_eof = 0;
| 
| 				if ( yywrap() )
| 					{
| 					/* Note: because we've taken care in
| 					 * yy_get_next_buffer() to have set up
| 					 * yytext, we can now set up
| 					 * yy_c_buf_p so that if some total
| 					 * hoser (like flex itself) wants to
| 					 * call the scanner after we return the
| 					 * YY_NULL, it'll still work - another
| 					 * YY_NULL will get returned.
| 					 */
| 					yy_c_buf_p = yytext_ptr + YY_MORE_ADJ;
| 
| 					yy_act = YY_STATE_EOF(YY_START);
| 					goto do_action;
| 					}
| 
| 				else
| 					{
| 					if ( ! yy_did_buffer_switch_on_eof )
| 						YY_NEW_FILE;
| 					}
| 				break;
| 				}
| 
| 			case EOB_ACT_CONTINUE_SCAN:
| 				yy_c_buf_p =
| 					yytext_ptr + yy_amount_of_matched_text;
| 
| 				yy_current_state = yy_get_previous_state();
| 
| 				yy_cp = yy_c_buf_p;
| 				yy_bp = yytext_ptr + YY_MORE_ADJ;
| 				goto yy_match;
| 
| 			case EOB_ACT_LAST_MATCH:
| 				yy_c_buf_p =
| 				&yy_current_buffer->yy_ch_buf[yy_n_chars];
| 
| 				yy_current_state = yy_get_previous_state();
| 
| 				yy_cp = yy_c_buf_p;
| 				yy_bp = yytext_ptr + YY_MORE_ADJ;
| 				goto yy_find_action;
| 			}
| 		break;
| 		}
| 
| 	default:
| 		YY_FATAL_ERROR(
| 			"fatal flex scanner internal error--no action found" );
| 	} /* end of action switch */
| 		} /* end of scanning one token */
| 	} /* end of yylex */
| 
| 
| /* yy_get_next_buffer - try to read in a new buffer
|  *
|  * Returns a code representing an action:
|  *	EOB_ACT_LAST_MATCH -
|  *	EOB_ACT_CONTINUE_SCAN - continue scanning from current position
|  *	EOB_ACT_END_OF_FILE - end of file
|  */
| 
| #ifdef YY_USE_PROTOS
| static int yy_get_next_buffer(void)
| #else
| static int yy_get_next_buffer()
| #endif
| 	{
| 	char *dest = yy_current_buffer->yy_ch_buf;
| 	char *source = yytext_ptr;
| 	int number_to_move, i;
| 	int ret_val;
| 
| 	if ( yy_c_buf_p > &yy_current_buffer->yy_ch_buf[yy_n_chars + 1] )
| 		YY_FATAL_ERROR(
| 		"fatal flex scanner internal error--end of buffer missed" );
| 
| 	if ( yy_current_buffer->yy_fill_buffer == 0 )
| 		{ /* Don't try to fill the buffer, so this is an EOF. */
| 		if ( yy_c_buf_p - yytext_ptr - YY_MORE_ADJ == 1 )
| 			{
| 			/* We matched a single character, the EOB, so
| 			 * treat this as a final EOF.
| 			 */
| 			return EOB_ACT_END_OF_FILE;
| 			}
| 
| 		else
| 			{
| 			/* We matched some text prior to the EOB, first
| 			 * process it.
| 			 */
| 			return EOB_ACT_LAST_MATCH;
| 			}
| 		}
| 
| 	/* Try to read more data. */
| 
| 	/* First move last chars to start of buffer. */
| 	number_to_move = (int) (yy_c_buf_p - yytext_ptr) - 1;
| 
| 	for ( i = 0; i < number_to_move; ++i )
| 		*(dest++) = *(source++);
| 
| 	if ( yy_current_buffer->yy_buffer_status == YY_BUFFER_EOF_PENDING )
| 		/* don't do the read, it's not guaranteed to return an EOF,
| 		 * just force an EOF
| 		 */
| 		yy_current_buffer->yy_n_chars = yy_n_chars = 0;
| 
| 	else
| 		{
| 		int num_to_read =
| 			yy_current_buffer->yy_buf_size - number_to_move - 1;
| 
| 		while ( num_to_read <= 0 )
| 			{ /* Not enough room in the buffer - grow it. */
| #ifdef YY_USES_REJECT
| 			YY_FATAL_ERROR(
| "input buffer overflow, can't enlarge buffer because scanner uses REJECT" );
| #else
| 
| 			/* just a shorter name for the current buffer */
| 			YY_BUFFER_STATE b = yy_current_buffer;
| 
| 			int yy_c_buf_p_offset =
| 				(int) (yy_c_buf_p - b->yy_ch_buf);
| 
| 			if ( b->yy_is_our_buffer )
| 				{
| 				int new_size = b->yy_buf_size * 2;
| 
| 				if ( new_size <= 0 )
| 					b->yy_buf_size += b->yy_buf_size / 8;
| 				else
| 					b->yy_buf_size *= 2;
| 
| 				b->yy_ch_buf = (char *)
| 					/* Include room in for 2 EOB chars. */
| 					yy_flex_realloc( (void *) b->yy_ch_buf,
| 							 b->yy_buf_size + 2 );
| 				}
| 			else
| 				/* Can't grow it, we don't own it. */
| 				b->yy_ch_buf = 0;
| 
| 			if ( ! b->yy_ch_buf )
| 				YY_FATAL_ERROR(
| 				"fatal error - scanner input buffer overflow" );
| 
| 			yy_c_buf_p = &b->yy_ch_buf[yy_c_buf_p_offset];
| 
| 			num_to_read = yy_current_buffer->yy_buf_size -
| 						number_to_move - 1;
| #endif
| 			}
| 
| 		if ( num_to_read > YY_READ_BUF_SIZE )
| 			num_to_read = YY_READ_BUF_SIZE;
| 
| 		/* Read in more data. */
| 		YY_INPUT( (&yy_current_buffer->yy_ch_buf[number_to_move]),
| 			yy_n_chars, num_to_read );
| 
| 		yy_current_buffer->yy_n_chars = yy_n_chars;
| 		}
| 
| 	if ( yy_n_chars == 0 )
| 		{
| 		if ( number_to_move == YY_MORE_ADJ )
| 			{
| 			ret_val = EOB_ACT_END_OF_FILE;
| 			yyrestart( yyin );
| 			}
| 
| 		else
| 			{
| 			ret_val = EOB_ACT_LAST_MATCH;
| 			yy_current_buffer->yy_buffer_status =
| 				YY_BUFFER_EOF_PENDING;
| 			}
| 		}
| 
| 	else
| 		ret_val = EOB_ACT_CONTINUE_SCAN;
| 
| 	yy_n_chars += number_to_move;
| 	yy_current_buffer->yy_ch_buf[yy_n_chars] = YY_END_OF_BUFFER_CHAR;
| 	yy_current_buffer->yy_ch_buf[yy_n_chars + 1] = YY_END_OF_BUFFER_CHAR;
| 
| 	yytext_ptr = &yy_current_buffer->yy_ch_buf[0];
| 
| 	return ret_val;
| 	}
| 
| 
| /* yy_get_previous_state - get the state just before the EOB char was reached */
| 
| #ifdef YY_USE_PROTOS
| static yy_state_type yy_get_previous_state(void)
| #else
| static yy_state_type yy_get_previous_state()
| #endif
| 	{
| 	yy_state_type yy_current_state;
| 	char *yy_cp;
| 
| 	yy_current_state = yy_start;
| 	yy_state_ptr = yy_state_buf;
| 	*yy_state_ptr++ = yy_current_state;
| 
| 	for ( yy_cp = yytext_ptr + YY_MORE_ADJ; yy_cp < yy_c_buf_p; ++yy_cp )
| 		{
| 		YY_CHAR yy_c = (*yy_cp ? yy_ec[YY_SC_TO_UI(*yy_cp)] : 1);
| 		while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 			{
| 			yy_current_state = (int) yy_def[yy_current_state];
| 			if ( yy_current_state >= 13 )
| 				yy_c = yy_meta[(unsigned int) yy_c];
| 			}
| 		yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 		*yy_state_ptr++ = yy_current_state;
| 		}
| 
| 	return yy_current_state;
| 	}
| 
| 
| /* yy_try_NUL_trans - try to make a transition on the NUL character
|  *
|  * synopsis
|  *	next_state = yy_try_NUL_trans( current_state );
|  */
| 
| #ifdef YY_USE_PROTOS
| static yy_state_type yy_try_NUL_trans( yy_state_type yy_current_state )
| #else
| static yy_state_type yy_try_NUL_trans( yy_current_state )
| yy_state_type yy_current_state;
| #endif
| 	{
| 	int yy_is_jam;
| 
| 	YY_CHAR yy_c = 1;
| 	while ( yy_chk[yy_base[yy_current_state] + yy_c] != yy_current_state )
| 		{
| 		yy_current_state = (int) yy_def[yy_current_state];
| 		if ( yy_current_state >= 13 )
| 			yy_c = yy_meta[(unsigned int) yy_c];
| 		}
| 	yy_current_state = yy_nxt[yy_base[yy_current_state] + (unsigned int) yy_c];
| 	yy_is_jam = (yy_current_state == 12);
| 	if ( ! yy_is_jam )
| 		*yy_state_ptr++ = yy_current_state;
| 
| 	return yy_is_jam ? 0 : yy_current_state;
| 	}
| 
| 
| #ifndef YY_NO_UNPUT
| #ifdef YY_USE_PROTOS
| static void yyunput( int c, char *yy_bp )
| #else
| static void yyunput( c, yy_bp )
| int c;
| char *yy_bp;
| #endif
| 	{
| 	char *yy_cp = yy_c_buf_p;
| 
| 	/* undo effects of setting up yytext */
| 	*yy_cp = yy_hold_char;
| 
| 	if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
| 		{ /* need to shift things up to make room */
| 		/* +2 for EOB chars. */
| 		int number_to_move = yy_n_chars + 2;
| 		char *dest = &yy_current_buffer->yy_ch_buf[
| 					yy_current_buffer->yy_buf_size + 2];
| 		char *source =
| 				&yy_current_buffer->yy_ch_buf[number_to_move];
| 
| 		while ( source > yy_current_buffer->yy_ch_buf )
| 			*--dest = *--source;
| 
| 		yy_cp += (int) (dest - source);
| 		yy_bp += (int) (dest - source);
| 		yy_current_buffer->yy_n_chars =
| 			yy_n_chars = yy_current_buffer->yy_buf_size;
| 
| 		if ( yy_cp < yy_current_buffer->yy_ch_buf + 2 )
| 			YY_FATAL_ERROR( "flex scanner push-back overflow" );
| 		}
| 
| 	*--yy_cp = (char) c;
| 
| 
| 	yytext_ptr = yy_bp;
| 	yy_hold_char = *yy_cp;
| 	yy_c_buf_p = yy_cp;
| 	}
| #endif	/* ifndef YY_NO_UNPUT */
| 
| 
| #ifndef YY_NO_INPUT
| #ifdef __cplusplus
| static int yyinput()
| #else
| #ifdef YY_USE_PROTOS
| static int input(void)
| #else
| static int input()
| #endif
| #endif
| 	{
| 	int c;
| 
| 	*yy_c_buf_p = yy_hold_char;
| 
| 	if ( *yy_c_buf_p == YY_END_OF_BUFFER_CHAR )
| 		{
| 		/* yy_c_buf_p now points to the character we want to return.
| 		 * If this occurs *before* the EOB characters, then it's a
| 		 * valid NUL; if not, then we've hit the end of the buffer.
| 		 */
| 		if ( yy_c_buf_p < &yy_current_buffer->yy_ch_buf[yy_n_chars] )
| 			/* This was really a NUL. */
| 			*yy_c_buf_p = '\0';
| 
| 		else
| 			{ /* need more input */
| 			int offset = yy_c_buf_p - yytext_ptr;
| 			++yy_c_buf_p;
| 
| 			switch ( yy_get_next_buffer() )
| 				{
| 				case EOB_ACT_LAST_MATCH:
| 					/* This happens because yy_g_n_b()
| 					 * sees that we've accumulated a
| 					 * token and flags that we need to
| 					 * try matching the token before
| 					 * proceeding.  But for input(),
| 					 * there's no matching to consider.
| 					 * So convert the EOB_ACT_LAST_MATCH
| 					 * to EOB_ACT_END_OF_FILE.
| 					 */
| 
| 					/* Reset buffer status. */
| 					yyrestart( yyin );
| 
| 					/* fall through */
| 
| 				case EOB_ACT_END_OF_FILE:
| 					{
| 					if ( yywrap() )
| 						return EOF;
| 
| 					if ( ! yy_did_buffer_switch_on_eof )
| 						YY_NEW_FILE;
| #ifdef __cplusplus
| 					return yyinput();
| #else
| 					return input();
| #endif
| 					}
| 
| 				case EOB_ACT_CONTINUE_SCAN:
| 					yy_c_buf_p = yytext_ptr + offset;
| 					break;
| 				}
| 			}
| 		}
| 
| 	c = *(unsigned char *) yy_c_buf_p;	/* cast for 8-bit char's */
| 	*yy_c_buf_p = '\0';	/* preserve yytext */
| 	yy_hold_char = *++yy_c_buf_p;
| 
| 
| 	return c;
| 	}
| #endif	/* ifndef YY_NO_INPUT */
| 
| 
| #ifdef YY_USE_PROTOS
| void yyrestart( FILE *input_file )
| #else
| void yyrestart( input_file )
| FILE *input_file;
| #endif
| 	{
| 	if ( ! yy_current_buffer )
| 		yy_current_buffer = yy_create_buffer( yyin, YY_BUF_SIZE );
| 
| 	yy_init_buffer( yy_current_buffer, input_file );
| 	yy_load_buffer_state();
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_switch_to_buffer( YY_BUFFER_STATE new_buffer )
| #else
| void yy_switch_to_buffer( new_buffer )
| YY_BUFFER_STATE new_buffer;
| #endif
| 	{
| 	if ( yy_current_buffer == new_buffer )
| 		return;
| 
| 	if ( yy_current_buffer )
| 		{
| 		/* Flush out information for old buffer. */
| 		*yy_c_buf_p = yy_hold_char;
| 		yy_current_buffer->yy_buf_pos = yy_c_buf_p;
| 		yy_current_buffer->yy_n_chars = yy_n_chars;
| 		}
| 
| 	yy_current_buffer = new_buffer;
| 	yy_load_buffer_state();
| 
| 	/* We don't actually know whether we did this switch during
| 	 * EOF (yywrap()) processing, but the only time this flag
| 	 * is looked at is after yywrap() is called, so it's safe
| 	 * to go ahead and always set it.
| 	 */
| 	yy_did_buffer_switch_on_eof = 1;
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_load_buffer_state( void )
| #else
| void yy_load_buffer_state()
| #endif
| 	{
| 	yy_n_chars = yy_current_buffer->yy_n_chars;
| 	yytext_ptr = yy_c_buf_p = yy_current_buffer->yy_buf_pos;
| 	yyin = yy_current_buffer->yy_input_file;
| 	yy_hold_char = *yy_c_buf_p;
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_create_buffer( FILE *file, int size )
| #else
| YY_BUFFER_STATE yy_create_buffer( file, size )
| FILE *file;
| int size;
| #endif
| 	{
| 	YY_BUFFER_STATE b;
| 
| 	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_buf_size = size;
| 
| 	/* yy_ch_buf has to be 2 characters longer than the size given because
| 	 * we need to put in 2 end-of-buffer characters.
| 	 */
| 	b->yy_ch_buf = (char *) yy_flex_alloc( b->yy_buf_size + 2 );
| 	if ( ! b->yy_ch_buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_create_buffer()" );
| 
| 	b->yy_is_our_buffer = 1;
| 
| 	yy_init_buffer( b, file );
| 
| 	return b;
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_delete_buffer( YY_BUFFER_STATE b )
| #else
| void yy_delete_buffer( b )
| YY_BUFFER_STATE b;
| #endif
| 	{
| 	if ( ! b )
| 		return;
| 
| 	if ( b == yy_current_buffer )
| 		yy_current_buffer = (YY_BUFFER_STATE) 0;
| 
| 	if ( b->yy_is_our_buffer )
| 		yy_flex_free( (void *) b->yy_ch_buf );
| 
| 	yy_flex_free( (void *) b );
| 	}
| 
| 
| #ifndef YY_ALWAYS_INTERACTIVE
| #ifndef YY_NEVER_INTERACTIVE
| extern int isatty YY_PROTO(( int ));
| #endif
| #endif
| 
| #ifdef YY_USE_PROTOS
| void yy_init_buffer( YY_BUFFER_STATE b, FILE *file )
| #else
| void yy_init_buffer( b, file )
| YY_BUFFER_STATE b;
| FILE *file;
| #endif
| 
| 
| 	{
| 	yy_flush_buffer( b );
| 
| 	b->yy_input_file = file;
| 	b->yy_fill_buffer = 1;
| 
| #if YY_ALWAYS_INTERACTIVE
| 	b->yy_is_interactive = 1;
| #else
| #if YY_NEVER_INTERACTIVE
| 	b->yy_is_interactive = 0;
| #else
| 	b->yy_is_interactive = file ? (isatty( fileno(file) ) > 0) : 0;
| #endif
| #endif
| 	}
| 
| 
| #ifdef YY_USE_PROTOS
| void yy_flush_buffer( YY_BUFFER_STATE b )
| #else
| void yy_flush_buffer( b )
| YY_BUFFER_STATE b;
| #endif
| 
| 	{
| 	if ( ! b )
| 		return;
| 
| 	b->yy_n_chars = 0;
| 
| 	/* We always need two end-of-buffer characters.  The first causes
| 	 * a transition to the end-of-buffer state.  The second causes
| 	 * a jam in that state.
| 	 */
| 	b->yy_ch_buf[0] = YY_END_OF_BUFFER_CHAR;
| 	b->yy_ch_buf[1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b->yy_buf_pos = &b->yy_ch_buf[0];
| 
| 	b->yy_at_bol = 1;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	if ( b == yy_current_buffer )
| 		yy_load_buffer_state();
| 	}
| 
| 
| #ifndef YY_NO_SCAN_BUFFER
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_scan_buffer( char *base, yy_size_t size )
| #else
| YY_BUFFER_STATE yy_scan_buffer( base, size )
| char *base;
| yy_size_t size;
| #endif
| 	{
| 	YY_BUFFER_STATE b;
| 
| 	if ( size < 2 ||
| 	     base[size-2] != YY_END_OF_BUFFER_CHAR ||
| 	     base[size-1] != YY_END_OF_BUFFER_CHAR )
| 		/* They forgot to leave room for the EOB's. */
| 		return 0;
| 
| 	b = (YY_BUFFER_STATE) yy_flex_alloc( sizeof( struct yy_buffer_state ) );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_buffer()" );
| 
| 	b->yy_buf_size = size - 2;	/* "- 2" to take care of EOB's */
| 	b->yy_buf_pos = b->yy_ch_buf = base;
| 	b->yy_is_our_buffer = 0;
| 	b->yy_input_file = 0;
| 	b->yy_n_chars = b->yy_buf_size;
| 	b->yy_is_interactive = 0;
| 	b->yy_at_bol = 1;
| 	b->yy_fill_buffer = 0;
| 	b->yy_buffer_status = YY_BUFFER_NEW;
| 
| 	yy_switch_to_buffer( b );
| 
| 	return b;
| 	}
| #endif
| 
| 
| #ifndef YY_NO_SCAN_STRING
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_scan_string( yyconst char *yy_str )
| #else
| YY_BUFFER_STATE yy_scan_string( yy_str )
| yyconst char *yy_str;
| #endif
| 	{
| 	int len;
| 	for ( len = 0; yy_str[len]; ++len )
| 		;
| 
| 	return yy_scan_bytes( yy_str, len );
| 	}
| #endif
| 
| 
| #ifndef YY_NO_SCAN_BYTES
| #ifdef YY_USE_PROTOS
| YY_BUFFER_STATE yy_scan_bytes( yyconst char *bytes, int len )
| #else
| YY_BUFFER_STATE yy_scan_bytes( bytes, len )
| yyconst char *bytes;
| int len;
| #endif
| 	{
| 	YY_BUFFER_STATE b;
| 	char *buf;
| 	yy_size_t n;
| 	int i;
| 
| 	/* Get memory for full buffer, including space for trailing EOB's. */
| 	n = len + 2;
| 	buf = (char *) yy_flex_alloc( n );
| 	if ( ! buf )
| 		YY_FATAL_ERROR( "out of dynamic memory in yy_scan_bytes()" );
| 
| 	for ( i = 0; i < len; ++i )
| 		buf[i] = bytes[i];
| 
| 	buf[len] = buf[len+1] = YY_END_OF_BUFFER_CHAR;
| 
| 	b = yy_scan_buffer( buf, n );
| 	if ( ! b )
| 		YY_FATAL_ERROR( "bad buffer in yy_scan_bytes()" );
| 
| 	/* It's okay to grow etc. this buffer, and we should throw it
| 	 * away when we're done.
| 	 */
| 	b->yy_is_our_buffer = 1;
| 
| 	return b;
| 	}
| #endif
| 
| 
| #ifndef YY_NO_PUSH_STATE
| #ifdef YY_USE_PROTOS
| static void yy_push_state( int new_state )
| #else
| static void yy_push_state( new_state )
| int new_state;
| #endif
| 	{
| 	if ( yy_start_stack_ptr >= yy_start_stack_depth )
| 		{
| 		yy_size_t new_size;
| 
| 		yy_start_stack_depth += YY_START_STACK_INCR;
| 		new_size = yy_start_stack_depth * sizeof( int );
| 
| 		if ( ! yy_start_stack )
| 			yy_start_stack = (int *) yy_flex_alloc( new_size );
| 
| 		else
| 			yy_start_stack = (int *) yy_flex_realloc(
| 					(void *) yy_start_stack, new_size );
| 
| 		if ( ! yy_start_stack )
| 			YY_FATAL_ERROR(
| 			"out of memory expanding start-condition stack" );
| 		}
| 
| 	yy_start_stack[yy_start_stack_ptr++] = YY_START;
| 
| 	BEGIN(new_state);
| 	}
| #endif
| 
| 
| #ifndef YY_NO_POP_STATE
| #ifdef YY_USE_PROTOS
| static void yy_pop_state(void)
| #else
| static void yy_pop_state()
| #endif
| 	{
| 	if ( --yy_start_stack_ptr < 0 )
| 		YY_FATAL_ERROR( "start-condition stack underflow" );
| 
| 	BEGIN(yy_start_stack[yy_start_stack_ptr]);
| 	}
| #endif
| 
| 
| #ifndef YY_NO_TOP_STATE
| #ifdef YY_USE_PROTOS
| static int yy_top_state(void)
| #else
| static int yy_top_state()
| #endif
| 	{
| 	return yy_start_stack[yy_start_stack_ptr - 1];
| 	}
| #endif
| 
| #ifndef YY_EXIT_FAILURE
| #define YY_EXIT_FAILURE 2
| #endif
| 
| #ifdef YY_USE_PROTOS
| static void yy_fatal_error( yyconst char msg[] )
| #else
| static void yy_fatal_error( msg )
| char msg[];
| #endif
| 	{
| 	(void) fprintf( stderr, "%s\n", msg );
| 	exit( YY_EXIT_FAILURE );
| 	}
| 
| 
| 
| /* Redefine yyless() so it works in section 3 code. */
| 
| #undef yyless
| #define yyless(n) \
| 	do \
| 		{ \
| 		/* Undo effects of setting up yytext. */ \
| 		yytext[yyleng] = yy_hold_char; \
| 		yy_c_buf_p = yytext + n; \
| 		yy_hold_char = *yy_c_buf_p; \
| 		*yy_c_buf_p = '\0'; \
| 		yyleng = n; \
| 		} \
| 	while ( 0 )
| 
| 
| /* Internal utility routines. */
| 
| #ifndef yytext_ptr
| #ifdef YY_USE_PROTOS
| static void yy_flex_strncpy( char *s1, yyconst char *s2, int n )
| #else
| static void yy_flex_strncpy( s1, s2, n )
| char *s1;
| yyconst char *s2;
| int n;
| #endif
| 	{
| 	int i;
| 	for ( i = 0; i < n; ++i )
| 		s1[i] = s2[i];
| 	}
| #endif
| 
| #ifdef YY_NEED_STRLEN
| #ifdef YY_USE_PROTOS
| static int yy_flex_strlen( yyconst char *s )
| #else
| static int yy_flex_strlen( s )
| yyconst char *s;
| #endif
| 	{
| 	int n;
| 	for ( n = 0; s[n]; ++n )
| 		;
| 
| 	return n;
| 	}
| #endif
| 
| 
| #ifdef YY_USE_PROTOS
| static void *yy_flex_alloc( yy_size_t size )
| #else
| static void *yy_flex_alloc( size )
| yy_size_t size;
| #endif
| 	{
| 	return (void *) malloc( size );
| 	}
| 
| #ifdef YY_USE_PROTOS
| static void *yy_flex_realloc( void *ptr, yy_size_t size )
| #else
| static void *yy_flex_realloc( ptr, size )
| void *ptr;
| yy_size_t size;
| #endif
| 	{
| 	/* The cast to (char *) in the following accommodates both
| 	 * implementations that use char* generic pointers, and those
| 	 * that use void* generic pointers.  It works with the latter
| 	 * because both ANSI C and C++ allow castless assignment from
| 	 * any pointer type to void*, and deal with argument conversions
| 	 * as though doing an assignment.
| 	 */
| 	return (void *) realloc( (char *) ptr, size );
| 	}
| 
| #ifdef YY_USE_PROTOS
| static void yy_flex_free( void *ptr )
| #else
| static void yy_flex_free( ptr )
| void *ptr;
| #endif
| 	{
| 	free( ptr );
| 	}
| 
| #if YY_MAIN
| int main()
| 	{
| 	yylex();
| 	return 0;
| 	}
| #endif
| #line 10 "conftest.l"
| 
| #ifdef YYTEXT_POINTER
| extern char *yytext;
| #endif
| int
| main (void)
| {
|   return ! yylex () + ! yywrap ();
| }
configure:4306: gcc -std=gnu99 -o conftest -g -O2   conftest.c -lfl  >&5
configure:4306: $? = 0
configure:4316: result: -lfl
configure:4322: checking whether yytext is a pointer
configure:4339: gcc -std=gnu99 -o conftest -g -O2   conftest.c -lfl  >&5
configure:4339: $? = 0
configure:4347: result: yes
configure:4360: checking whether ln -s works
configure:4364: result: yes
configure:4400: checking build system type
configure:4414: result: i386-unknown-freebsd9.1
configure:4434: checking host system type
configure:4447: result: i386-unknown-freebsd9.1
configure:4488: checking how to print strings
configure:4515: result: printf
configure:4536: checking for a sed that does not truncate output
configure:4600: result: /usr/bin/sed
configure:4618: checking for grep that handles long lines and -e
configure:4676: result: /usr/bin/grep
configure:4681: checking for egrep
configure:4743: result: /usr/bin/grep -E
configure:4748: checking for fgrep
configure:4810: result: /usr/bin/grep -F
configure:4845: checking for ld used by gcc -std=gnu99
configure:4912: result: /usr/bin/ld
configure:4919: checking if the linker (/usr/bin/ld) is GNU ld
configure:4934: result: yes
configure:4946: checking for BSD- or MS-compatible name lister (nm)
configure:4995: result: /usr/bin/nm -B
configure:5125: checking the name lister (/usr/bin/nm -B) interface
configure:5132: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:5135: /usr/bin/nm -B "conftest.o"
configure:5138: output
00000000 B some_variable
configure:5145: result: BSD nm
configure:5149: checking the maximum length of command line arguments
configure:5274: result: 196608
configure:5291: checking whether the shell understands some XSI constructs
configure:5301: result: yes
configure:5305: checking whether the shell understands "+="
configure:5311: result: no
configure:5346: checking how to convert i386-unknown-freebsd9.1 file names to i386-unknown-freebsd9.1 format
configure:5386: result: func_convert_file_noop
configure:5393: checking how to convert i386-unknown-freebsd9.1 file names to toolchain format
configure:5413: result: func_convert_file_noop
configure:5420: checking for /usr/bin/ld option to reload object files
configure:5427: result: -r
configure:5501: checking for objdump
configure:5517: found /usr/bin/objdump
configure:5528: result: objdump
configure:5560: checking how to recognize dependent libraries
configure:5762: result: pass_all
configure:5847: checking for dlltool
configure:5877: result: no
configure:5907: checking how to associate runtime and link libraries
configure:5934: result: printf %s\n
configure:5994: checking for ar
configure:6010: found /usr/bin/ar
configure:6021: result: ar
configure:6058: checking for archiver @FILE support
configure:6075: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:6075: $? = 0
configure:6078: ar cru libconftest.a @conftest.lst >&5
ar: warning: can't open file: @conftest.lst: No such file or directory
configure:6081: $? = 0
configure:6086: ar cru libconftest.a @conftest.lst >&5
ar: warning: can't open file: @conftest.lst: No such file or directory
configure:6089: $? = 0
configure:6101: result: no
configure:6159: checking for strip
configure:6175: found /usr/bin/strip
configure:6186: result: strip
configure:6258: checking for ranlib
configure:6274: found /usr/bin/ranlib
configure:6285: result: ranlib
configure:6387: checking command to parse /usr/bin/nm -B output from gcc -std=gnu99 object
configure:6506: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:6509: $? = 0
configure:6513: /usr/bin/nm -B conftest.o \| sed -n -e 's/^.*[ ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[ ][ ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p' | sed '/ __gnu_lto/d' \> conftest.nm
configure:6516: $? = 0
configure:6582: gcc -std=gnu99 -o conftest -g -O2   conftest.c conftstm.o >&5
configure:6585: $? = 0
configure:6623: result: ok
configure:6660: checking for sysroot
configure:6690: result: no
configure:6933: checking for mt
configure:6949: found /usr/bin/mt
configure:6960: result: mt
configure:6983: checking if mt is a manifest tool
configure:6989: mt '-?'
mt: illegal option -- ?
usage: mt [-f device] command [count]
configure:6997: result: no
configure:7625: checking for ANSI C header files
configure:7645: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7645: $? = 0
configure:7718: gcc -std=gnu99 -o conftest -g -O2   conftest.c  >&5
configure:7718: $? = 0
configure:7718: ./conftest
configure:7718: $? = 0
configure:7729: result: yes
configure:7742: checking for sys/types.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for sys/stat.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for stdlib.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for string.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for memory.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for strings.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for inttypes.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for stdint.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7742: checking for unistd.h
configure:7742: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7742: $? = 0
configure:7742: result: yes
configure:7756: checking for dlfcn.h
configure:7756: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:7756: $? = 0
configure:7756: result: yes
configure:7943: checking for objdir
configure:7958: result: .libs
configure:8229: checking if gcc -std=gnu99 supports -fno-rtti -fno-exceptions
configure:8247: gcc -std=gnu99 -c -g -O2  -fno-rtti -fno-exceptions conftest.c >&5
cc1: warning: command line option "-fno-rtti" is valid for C++/ObjC++ but not for C
configure:8251: $? = 0
configure:8264: result: no
configure:8574: checking for gcc -std=gnu99 option to produce PIC
configure:8581: result: -fPIC -DPIC
configure:8589: checking if gcc -std=gnu99 PIC flag -fPIC -DPIC works
configure:8607: gcc -std=gnu99 -c -g -O2  -fPIC -DPIC -DPIC conftest.c >&5
configure:8611: $? = 0
configure:8624: result: yes
configure:8653: checking if gcc -std=gnu99 static flag -static works
configure:8681: result: yes
configure:8696: checking if gcc -std=gnu99 supports -c -o file.o
configure:8717: gcc -std=gnu99 -c -g -O2  -o out/conftest2.o conftest.c >&5
configure:8721: $? = 0
configure:8743: result: yes
configure:8751: checking if gcc -std=gnu99 supports -c -o file.o
configure:8798: result: yes
configure:8831: checking whether the gcc -std=gnu99 linker (/usr/bin/ld) supports shared libraries
configure:9989: result: yes
configure:10234: checking dynamic linker characteristics
configure:10970: result: freebsd9.1 ld.so
configure:11077: checking how to hardcode library paths into programs
configure:11102: result: immediate
configure:11642: checking whether stripping libraries is possible
configure:11647: result: yes
configure:11682: checking if libtool supports shared libraries
configure:11684: result: yes
configure:11687: checking whether to build shared libraries
configure:11708: result: no
configure:11711: checking whether to build static libraries
configure:11715: result: yes
configure:11750: checking whether make sets $(MAKE)
configure:11772: result: yes
configure:11785: checking for bison
configure:11801: found /usr/local/bin/bison
configure:11812: result: bison -y
configure:11829: checking for ANSI C header files
configure:11933: result: yes
configure:11944: checking math.h usability
configure:11944: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:11944: $? = 0
configure:11944: result: yes
configure:11944: checking math.h presence
configure:11944: gcc -std=gnu99 -E  conftest.c
configure:11944: $? = 0
configure:11944: result: yes
configure:11944: checking for math.h
configure:11944: result: yes
configure:11944: checking for strings.h
configure:11944: result: yes
configure:11944: checking stddef.h usability
configure:11944: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:11944: $? = 0
configure:11944: result: yes
configure:11944: checking stddef.h presence
configure:11944: gcc -std=gnu99 -E  conftest.c
configure:11944: $? = 0
configure:11944: result: yes
configure:11944: checking for stddef.h
configure:11944: result: yes
configure:11944: checking for stdint.h
configure:11944: result: yes
configure:11955: checking for an ANSI C-conforming const
configure:12021: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:12021: $? = 0
configure:12028: result: yes
configure:12036: checking for size_t
configure:12036: gcc -std=gnu99 -c -g -O2  conftest.c >&5
configure:12036: $? = 0
configure:12036: gcc -std=gnu99 -c -g -O2  conftest.c >&5
conftest.c: In function 'main':
conftest.c:65: error: expected expression before ')' token
configure:12036: $? = 1
configure: failed program was:
| /* confdefs.h */
| #define PACKAGE_NAME "libmatheval"
| #define PACKAGE_TARNAME "libmatheval"
| #define PACKAGE_VERSION "1.1.8"
| #define PACKAGE_STRING "libmatheval 1.1.8"
| #define PACKAGE_BUGREPORT "asamardzic@gnu.org"
| #define PACKAGE_URL ""
| #define PACKAGE "libmatheval"
| #define VERSION "1.1.8"
| #define YYTEXT_POINTER 1
| #define STDC_HEADERS 1
| #define HAVE_SYS_TYPES_H 1
| #define HAVE_SYS_STAT_H 1
| #define HAVE_STDLIB_H 1
| #define HAVE_STRING_H 1
| #define HAVE_MEMORY_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_INTTYPES_H 1
| #define HAVE_STDINT_H 1
| #define HAVE_UNISTD_H 1
| #define HAVE_DLFCN_H 1
| #define LT_OBJDIR ".libs/"
| #define STDC_HEADERS 1
| #define HAVE_MATH_H 1
| #define HAVE_STRINGS_H 1
| #define HAVE_STDDEF_H 1
| #define HAVE_STDINT_H 1
| /* end confdefs.h.  */
| #include <stdio.h>
| #ifdef HAVE_SYS_TYPES_H
| # include <sys/types.h>
| #endif
| #ifdef HAVE_SYS_STAT_H
| # include <sys/stat.h>
| #endif
| #ifdef STDC_HEADERS
| # include <stdlib.h>
| # include <stddef.h>
| #else
| # ifdef HAVE_STDLIB_H
| #  include <stdlib.h>
| # endif
| #endif
| #ifdef HAVE_STRING_H
| # if !defined STDC_HEADERS && defined HAVE_MEMORY_H
| #  include <memory.h>
| # endif
| # include <string.h>
| #endif
| #ifdef HAVE_STRINGS_H
| # include <strings.h>
| #endif
| #ifdef HAVE_INTTYPES_H
| # include <inttypes.h>
| #endif
| #ifdef HAVE_STDINT_H
| # include <stdint.h>
| #endif
| #ifdef HAVE_UNISTD_H
| # include <unistd.h>
| #endif
| int
| main ()
| {
| if (sizeof ((size_t)))
| 	    return 0;
|   ;
|   return 0;
| }
configure:12036: result: yes
configure:12051: checking for bzero
configure:12051: gcc -std=gnu99 -o conftest -g -O2   conftest.c  >&5
conftest.c:52: warning: conflicting types for built-in function 'bzero'
configure:12051: $? = 0
configure:12051: result: yes
configure:12195: creating ./config.status

## ---------------- ##
## Cache variables. ##
## ---------------- ##

ac_cv_build=i386-unknown-freebsd9.1
ac_cv_c_compiler_gnu=yes
ac_cv_c_const=yes
ac_cv_env_CC_set=''
ac_cv_env_CC_value=''
ac_cv_env_CFLAGS_set=''
ac_cv_env_CFLAGS_value=''
ac_cv_env_CPPFLAGS_set=''
ac_cv_env_CPPFLAGS_value=''
ac_cv_env_CPP_set=''
ac_cv_env_CPP_value=''
ac_cv_env_LDFLAGS_set=''
ac_cv_env_LDFLAGS_value=''
ac_cv_env_LIBS_set=''
ac_cv_env_LIBS_value=''
ac_cv_env_YACC_set=''
ac_cv_env_YACC_value=''
ac_cv_env_YFLAGS_set=''
ac_cv_env_YFLAGS_value=''
ac_cv_env_build_alias_set=''
ac_cv_env_build_alias_value=''
ac_cv_env_host_alias_set=''
ac_cv_env_host_alias_value=''
ac_cv_env_target_alias_set=''
ac_cv_env_target_alias_value=''
ac_cv_func_bzero=yes
ac_cv_header_dlfcn_h=yes
ac_cv_header_inttypes_h=yes
ac_cv_header_math_h=yes
ac_cv_header_memory_h=yes
ac_cv_header_stdc=yes
ac_cv_header_stddef_h=yes
ac_cv_header_stdint_h=yes
ac_cv_header_stdlib_h=yes
ac_cv_header_string_h=yes
ac_cv_header_strings_h=yes
ac_cv_header_sys_stat_h=yes
ac_cv_header_sys_types_h=yes
ac_cv_header_unistd_h=yes
ac_cv_host=i386-unknown-freebsd9.1
ac_cv_lib_lex=-lfl
ac_cv_objext=o
ac_cv_path_EGREP='/usr/bin/grep -E'
ac_cv_path_FGREP='/usr/bin/grep -F'
ac_cv_path_GREP=/usr/bin/grep
ac_cv_path_SED=/usr/bin/sed
ac_cv_path_install='/usr/bin/install -c'
ac_cv_prog_AWK=gawk
ac_cv_prog_CPP='gcc -std=gnu99 -E'
ac_cv_prog_LEX=flex
ac_cv_prog_YACC='bison -y'
ac_cv_prog_ac_ct_AR=ar
ac_cv_prog_ac_ct_CC=gcc
ac_cv_prog_ac_ct_MANIFEST_TOOL=mt
ac_cv_prog_ac_ct_OBJDUMP=objdump
ac_cv_prog_ac_ct_RANLIB=ranlib
ac_cv_prog_ac_ct_STRIP=strip
ac_cv_prog_cc_c89=''
ac_cv_prog_cc_c99=-std=gnu99
ac_cv_prog_cc_g=yes
ac_cv_prog_cc_gcc_c_o=yes
ac_cv_prog_lex_root=lex.yy
ac_cv_prog_lex_yytext_pointer=yes
ac_cv_prog_make_make_set=yes
ac_cv_type_size_t=yes
am_cv_CC_dependencies_compiler_type=gcc3
lt_cv_ar_at_file=no
lt_cv_deplibs_check_method=pass_all
lt_cv_file_magic_cmd='$MAGIC_CMD'
lt_cv_file_magic_test_file=''
lt_cv_ld_reload_flag=-r
lt_cv_nm_interface='BSD nm'
lt_cv_objdir=.libs
lt_cv_path_LD=/usr/bin/ld
lt_cv_path_NM='/usr/bin/nm -B'
lt_cv_path_mainfest_tool=no
lt_cv_prog_compiler_c_o=yes
lt_cv_prog_compiler_pic='-fPIC -DPIC'
lt_cv_prog_compiler_pic_works=yes
lt_cv_prog_compiler_rtti_exceptions=no
lt_cv_prog_compiler_static_works=yes
lt_cv_prog_gnu_ld=yes
lt_cv_sharedlib_from_linklib_cmd='printf %s\n'
lt_cv_sys_global_symbol_pipe='sed -n -e '\''s/^.*[	 ]\([ABCDGIRSTW][ABCDGIRSTW]*\)[	 ][	 ]*\([_A-Za-z][_A-Za-z0-9]*\)$/\1 \2 \2/p'\'' | sed '\''/ __gnu_lto/d'\'
lt_cv_sys_global_symbol_to_c_name_address='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"\2", (void *) \&\2},/p'\'
lt_cv_sys_global_symbol_to_c_name_address_lib_prefix='sed -n -e '\''s/^: \([^ ]*\)[ ]*$/  {\"\1\", (void *) 0},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \(lib[^ ]*\)$/  {"\2", (void *) \&\2},/p'\'' -e '\''s/^[ABCDGIRSTW]* \([^ ]*\) \([^ ]*\)$/  {"lib\2", (void *) \&\2},/p'\'
lt_cv_sys_global_symbol_to_cdecl='sed -n -e '\''s/^T .* \(.*\)$/extern int \1();/p'\'' -e '\''s/^[ABCDGIRSTW]* .* \(.*\)$/extern char \1;/p'\'
lt_cv_sys_max_cmd_len=196608
lt_cv_to_host_file_cmd=func_convert_file_noop
lt_cv_to_tool_file_cmd=func_convert_file_noop

## ----------------- ##
## Output variables. ##
## ----------------- ##

ACLOCAL='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/missing --run aclocal-1.11'
AMDEPBACKSLASH='\'
AMDEP_FALSE='#'
AMDEP_TRUE=''
AMTAR='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/missing --run tar'
AR='ar'
AUTOCONF='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/missing --run autoconf'
AUTOHEADER='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/missing --run autoheader'
AUTOM4TE='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/missing --run autom4te'
AUTOMAKE='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/missing --run automake-1.11'
AWK='gawk'
CC='gcc -std=gnu99'
CCDEPMODE='depmode=gcc3'
CFLAGS='-g -O2'
CPP='gcc -std=gnu99 -E'
CPPFLAGS=''
CYGPATH_W='echo'
DEFS='-DHAVE_CONFIG_H'
DEPDIR='.deps'
DLLTOOL='false'
DSYMUTIL=''
DUMPBIN=''
ECHO_C=''
ECHO_N='-n'
ECHO_T=''
EGREP='/usr/bin/grep -E'
EXEEXT=''
FGREP='/usr/bin/grep -F'
GREP='/usr/bin/grep'
INSTALL_DATA='${INSTALL} -m 644'
INSTALL_PROGRAM='${INSTALL}'
INSTALL_SCRIPT='${INSTALL}'
INSTALL_STRIP_PROGRAM='$(install_sh) -c -s'
LD='/usr/bin/ld'
LDFLAGS=''
LEX='flex'
LEXLIB='-lfl'
LEX_OUTPUT_ROOT='lex.yy'
LIBOBJS=''
LIBS=''
LIBTOOL='$(SHELL) $(top_builddir)/libtool'
LIPO=''
LN_S='ln -s'
LTLIBOBJS=''
MAKEINFO='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/missing --run makeinfo'
MANIFEST_TOOL=':'
MKDIR_P='config/install-sh -c -d'
NM='/usr/bin/nm -B'
NMEDIT=''
OBJDUMP='objdump'
OBJEXT='o'
OTOOL64=''
OTOOL=''
PACKAGE='libmatheval'
PACKAGE_BUGREPORT='asamardzic@gnu.org'
PACKAGE_NAME='libmatheval'
PACKAGE_STRING='libmatheval 1.1.8'
PACKAGE_TARNAME='libmatheval'
PACKAGE_URL=''
PACKAGE_VERSION='1.1.8'
PATH_SEPARATOR=':'
RANLIB='ranlib'
SED='/usr/bin/sed'
SET_MAKE=''
SHELL='/bin/sh'
STRIP='strip'
VERSION='1.1.8'
YACC='bison -y'
YFLAGS=''
ac_aux_dir='config'
ac_ct_AR='ar'
ac_ct_CC='gcc'
ac_ct_DUMPBIN=''
am__EXEEXT_FALSE=''
am__EXEEXT_TRUE='#'
am__fastdepCC_FALSE='#'
am__fastdepCC_TRUE=''
am__include='include'
am__isrc=''
am__leading_dot='.'
am__quote=''
am__tar='${AMTAR} chof - "$$tardir"'
am__untar='${AMTAR} xf -'
bindir='${exec_prefix}/bin'
build='i386-unknown-freebsd9.1'
build_alias=''
build_cpu='i386'
build_os='freebsd9.1'
build_vendor='unknown'
datadir='${datarootdir}'
datarootdir='${prefix}/share'
docdir='${datarootdir}/doc/${PACKAGE_TARNAME}'
dvidir='${docdir}'
exec_prefix='${prefix}'
host='i386-unknown-freebsd9.1'
host_alias=''
host_cpu='i386'
host_os='freebsd9.1'
host_vendor='unknown'
htmldir='${docdir}'
includedir='${prefix}/include'
infodir='${datarootdir}/info'
install_sh='${SHELL} /var/wims/src/Misc/canvasdraw/libmatheval-1.1.8/config/install-sh'
libdir='${exec_prefix}/lib'
libexecdir='${exec_prefix}/libexec'
localedir='${datarootdir}/locale'
localstatedir='${prefix}/var'
mandir='${datarootdir}/man'
mkdir_p='$(top_builddir)/config/install-sh -c -d'
oldincludedir='/usr/include'
pdfdir='${docdir}'
prefix='/var/wims/src/Misc/canvasdraw'
program_transform_name='s,x,x,'
psdir='${docdir}'
sbindir='${exec_prefix}/sbin'
sharedstatedir='${prefix}/com'
sysconfdir='${prefix}/etc'
target_alias=''

## ----------- ##
## confdefs.h. ##
## ----------- ##

/* confdefs.h */
#define PACKAGE_NAME "libmatheval"
#define PACKAGE_TARNAME "libmatheval"
#define PACKAGE_VERSION "1.1.8"
#define PACKAGE_STRING "libmatheval 1.1.8"
#define PACKAGE_BUGREPORT "asamardzic@gnu.org"
#define PACKAGE_URL ""
#define PACKAGE "libmatheval"
#define VERSION "1.1.8"
#define YYTEXT_POINTER 1
#define STDC_HEADERS 1
#define HAVE_SYS_TYPES_H 1
#define HAVE_SYS_STAT_H 1
#define HAVE_STDLIB_H 1
#define HAVE_STRING_H 1
#define HAVE_MEMORY_H 1
#define HAVE_STRINGS_H 1
#define HAVE_INTTYPES_H 1
#define HAVE_STDINT_H 1
#define HAVE_UNISTD_H 1
#define HAVE_DLFCN_H 1
#define LT_OBJDIR ".libs/"
#define STDC_HEADERS 1
#define HAVE_MATH_H 1
#define HAVE_STRINGS_H 1
#define HAVE_STDDEF_H 1
#define HAVE_STDINT_H 1
#define HAVE_BZERO 1

configure: exit 0

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by libmatheval config.status 1.1.8, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status config.h

on vrijdag

config.status:1088: creating config.h
config.status:1269: config.h is unchanged

## ---------------------- ##
## Running config.status. ##
## ---------------------- ##

This file was extended by libmatheval config.status 1.1.8, which was
generated by GNU Autoconf 2.69.  Invocation command line was

  CONFIG_FILES    = 
  CONFIG_HEADERS  = 
  CONFIG_LINKS    = 
  CONFIG_COMMANDS = 
  $ ./config.status 

on vrijdag

config.status:1088: creating Makefile
config.status:1088: creating lib/Makefile
config.status:1088: creating libmatheval.pc
config.status:1088: creating config.h
config.status:1269: config.h is unchanged
config.status:1317: executing depfiles commands
config.status:1317: executing libtool commands
